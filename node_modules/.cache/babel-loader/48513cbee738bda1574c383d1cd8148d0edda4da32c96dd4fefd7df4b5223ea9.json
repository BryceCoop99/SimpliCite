{"ast":null,"code":"import'./App.css';import{Quote}from'./models/Quote.js';import{CitationError}from'./models/CitationError.js';import{DocumentError}from'./models/DocumentError.js';import{MLAWorksCitation}from'./models/MLAWorksCitation.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var documentErrorList;var dataEntriesList;var citationsErrorList;var worksCitedList;var firstDoubleQuote_CharValues=[8220,34];var lastDoubleQuote_CharValues=[8221,34];// 33: !    46: .    59: ;    63: ?\n// Need Valid MLA inline-citation\n// Check if Block Quotes work!\nfunction inputTextChangeHandler(e){e.preventDefault();var inputText=document.getElementById(\"inputText\").value;if(inputText.length===0){var responseImportant=document.getElementById(\"responseImportant\");responseImportant.innerHTML=\"Copy and paste your text here\";responseImportant.style.backgroundColor=\"none\";}}function stripQuotations(quote){if(firstDoubleQuote_CharValues.includes(quote.charCodeAt(0))){quote=quote.substring(1);}if(lastDoubleQuote_CharValues.includes(quote.charCodeAt(quote.length-1))){quote=quote.substring(0,quote.length-1);}quote.replace(\"\\\"\",\"\");return quote;}function addCitationError(quote,citation,secIndex,index,errorMessage){quote=stripQuotations(quote);var hasCitationInQuote=false;for(var i=0;i<dataEntriesList.length;i++){var quoteToCheck=dataEntriesList[i].getQuote();if(quote===quoteToCheck){hasCitationInQuote=true;var quoteObject=getQuoteObject(quote);var citationToCheck=quoteObject.getCitation();var citationErrors=quoteObject.getCitationErrors();if(citationErrors===undefined){citationErrors=[];}if(citation===citationToCheck){citationErrors.push(\"This citation already exists for given quote.\");// What about errorMessage here?\n}else{citationErrors.push(errorMessage);}quoteObject.setCitationErrors(errorMessage);dataEntriesList.push(quoteObject);break;}}if(!hasCitationInQuote){var citationObject;for(var _i=0;_i<citationsErrorList.length;_i++){var _citationToCheck=citationsErrorList[_i].getCitation();if(citation===_citationToCheck){citationObject=citationsErrorList[_i];var _citationErrors=citationObject.getCitationErrors();if(_citationErrors===undefined){_citationErrors=[];}_citationErrors.push(\"This citation already exists.\");citationObject.setCitationErrors(_citationErrors);break;}}if(citationObject===undefined){var _citationObject=new CitationError(citation);var _citationErrors2=[errorMessage];_citationObject.setCitationErrors(_citationErrors2);}citationsErrorList.push(citationObject);}}/* For now, there should only be one quote per citation! This will flip some time soon*/function addCitation(quote,citation,secIndex,index){quote=stripQuotations(quote);var quoteObject=undefined;for(var i=0;i<dataEntriesList.length;i++){var quoteToCheck=dataEntriesList[i].getQuote();if(quote===quoteToCheck){quoteObject=getQuoteObject(quote);var citationStr=quoteObject.getCitation();if(citationStr===undefined){quoteObject.setCitation(citation);quoteObject.setCitationIndex(index-citation.split(\" \").length);quoteObject.setCitationSection(secIndex);}else{quoteObject.setCitationError(\"This Citation exists at least twice for the quote in this paper.\");addCitationError(quote,citation,secIndex,index);}dataEntriesList.push(quoteObject);break;}}if(quoteObject===undefined){// If quote does not exists with given citation.\nvar citationHasErrors=false;for(var _i2=0;_i2<citationsErrorList.length;_i2++){// Checking to see if has errors\nvar citationToCheck=citationsErrorList[_i2].getCitation();if(citation===citationToCheck){citationHasErrors=true;var citationObject=getCitationObject(citation);console.log(citationObject);var citationErrors=citationObject.getCitationErrors();if(citationErrors===undefined){citationErrors=[];}citationErrors.push(\"This citation is not associated with any quote/block quote.\");citationObject.setCitationErrors(citationErrors);citationsErrorList.push(citationObject);break;}}if(!citationHasErrors){var _citationObject2=new CitationError(citation);citationsErrorList.push(_citationObject2);}}}function getCitationObject(citation){var citationObject;for(var i=0;i<citationsErrorList.length;i++){var citationToCheck=citationsErrorList[i].getCitation();if(citation===citationToCheck){citationObject=citationsErrorList.splice(i,1);citationObject=citationObject[0];break;}}return citationObject;}function getQuoteObject(quote){quote=stripQuotations(quote);var quoteObject;for(var i=0;i<dataEntriesList.length;i++){var quoteToCheck=dataEntriesList[i].getQuote();if(quote===quoteToCheck){quoteObject=dataEntriesList.splice(i,1);//Removes the quoteObj from list.\nquoteObject=quoteObject[0];break;}}return quoteObject;}function addQuote(quote,secIndex,index){quote=stripQuotations(quote);var quoteObject;for(var i=0;i<dataEntriesList.length;i++){var quoteToCheck=dataEntriesList[i].getQuote();if(quote===quoteToCheck){quoteObject=getQuoteObject(quote);var quoteErrors=quoteObject.getQuoteErrors();if(quoteErrors===undefined){quoteErrors=[];}quoteErrors.push(\"This quote already exists in this document\");quoteObject.setQuoteErrors(quoteErrors);break;}}if(quoteObject===undefined){quoteObject=new Quote(quote);var _quoteErrors=[];quoteObject.setQuoteErrors(_quoteErrors);quoteObject.setQuoteIndex(index-quote.split(\" \").length);quoteObject.setQuoteSection(secIndex);}dataEntriesList.push(quoteObject);}function addQuoteError(quote,errorMessage){quote=stripQuotations(quote);var quoteObject=getQuoteObject(quote);if(quoteObject===undefined){console.log(\"SYSTEM ERROR: Cannot add error to a quote that does not exist\");return undefined;}var quoteErrors=quoteObject.getQuoteErrors();if(quoteErrors===undefined){quoteErrors=[];}quoteErrors.push(errorMessage);quoteObject.setQuoteErrors(quoteErrors);dataEntriesList.unshift(quoteObject);}function addDocumentError(errorMessage,secIndex,index){var documentErrorObject=new DocumentError(errorMessage,secIndex,index);documentErrorList.push(documentErrorObject);}function removeMlaDecimal(word){var chars=word.split('');if(chars[word.length-1]==='.'){// If the last character is a decimal, remove it!\nvar result=word.slice(0,-1);return result;}else{return word;}}function capitalizeFirstLetter(word){return word.charAt(0).toUpperCase()+word.slice(1);}/** This should check that an author's name appears in here! Author must come from Works Cited list*/function validateCitationInText(wordsInSection,citation){// DO NOT disable the comment below...\n// eslint-disable-next-line\nvar sentences=wordsInSection.join(\" \").match(/[^\\.!\\?]+[\\.!\\?]+/g);var sentencesWithQuotationCitation=[];// console.log(\"Citation to check: \" +citation);\nfor(var sentenceIndex=0;sentenceIndex<wordsInSection.length;sentenceIndex++){var sentence=sentences[sentenceIndex];var hasBeginningQuoteInSentence=false;var hasEndingQuoteInSentence=false;if(sentence===undefined){continue;}for(var i=0;i<sentence.length;i++){var character=sentence[i];if(!hasBeginningQuoteInSentence&&firstDoubleQuote_CharValues.includes(character.charCodeAt(0))){hasBeginningQuoteInSentence=true;}else if(!hasEndingQuoteInSentence&&lastDoubleQuote_CharValues.includes(character.charCodeAt(0))){hasEndingQuoteInSentence=true;// console.log(\"Sentence: \"+sentence);\nbreak;}}if(hasBeginningQuoteInSentence){sentencesWithQuotationCitation.push(sentence);// console.log(\"Has beginning quote! \" +sentencesWithQuotationCitation.join(\" \"));\n// console.log(sentencesWithQuotationCitation.join(\" \").includes(citation));\nif(hasEndingQuoteInSentence){// IF IT HAS ENDING QUOTATION MARKS, THE CITATION MUST EXIST AFTER QUOTE!\n// console.log(\"Quote found! \" +sentencesWithQuotationCitation.join(\" \"));\nreturn true;}}}return false;}function findMlaBlockCitation(wordsInSection,secIndex){if(wordsInSection.join(\" \").includes(\")\")&&wordsInSection.join(\" \").includes(\"(\")){// Checks if the section contains a parenthesis. Possible block citation!\nconsole.log(wordsInSection);var citation=[];var quote=[];var i=0;var startedCitationIndex=0;while(true){var word=wordsInSection[i];citation=findMlaCitations(word,startedCitationIndex,i,citation);if(citation[0].includes(\")\")&&citation[0].includes(\"(\")){// If citation was found\naddQuote(quote.join(\" \"),secIndex,i);addCitation(quote.join(\" \"),citation.join(\" \"),secIndex,i);return true;}else if(!citation[0].includes(\"(\")){quote.push(word);}else if(citation[0].includes(\"(\")){citation.push(word);}i++;}}return false;}function findMlaCitations(word,startedCitationIndex,i,citation){if(!word.includes(\"(\")&&citation===undefined){// If beginning of citation and doesn't include open parenthesis.\nconsole.log(\"Citation does not come right after quote! WHOOPS\");return[];}else if(word.includes(\"(\")&&startedCitationIndex===i){// If citation is right after quote.\nif(word.includes(\")\")){// If word is also end of citation too.\nvar finalWord=removeMlaDecimal(word);citation.push(finalWord);return[citation.join(\" \")];}citation.push(word);}else if(word.includes(\")\")){// If this is the end of the citation.\nvar _finalWord=removeMlaDecimal(word);citation.push(_finalWord);return[citation.join(\" \")];}else{citation.push(word);}return[citation.join(\" \")];}/**\n   * Finds all of the quotes in MLA Format and adds them to the Quotes List! \n   */function findMlaQuotes(startingIndex,inputSections,sectionWorksCited){for(var secIndex=startingIndex;secIndex<sectionWorksCited-1;secIndex++){var currentSection=inputSections[secIndex].replace('\\t',\"\");var wordsInSection=currentSection.split(\" \");if(wordsInSection.length<2){// We don't want empty sections!\ncontinue;}var containsQuoteInSection=false;var containsCitationInSection=false;var hasQuoteErrorInSection=false;/* Time to find the quotes in a section*/var _loop=function _loop(_i3){var word=wordsInSection[_i3];var containsQuote=false;var quote=void 0;var errors=[];if(firstDoubleQuote_CharValues.includes(word.charCodeAt(0))){// First quoted word found, now find the last.\nvar wordsInQuote=[];wordsInQuote.push(word);var wordsinSectionLength=wordsInSection.length-1;while(true){// Checking word with ending quotation marks!\n_i3++;word=wordsInSection[_i3];word=removeMlaDecimal(word);var containsFinalQuote=lastDoubleQuote_CharValues.includes(word.charCodeAt(word.length-1));wordsInQuote.push(word);if(containsFinalQuote){containsQuoteInSection=true;containsQuote=true;break;}else if(word.includes(\"(\")){// If a citation comes before an ending parenthesis, tell the user.\nerrors.push(\"Missing ending parenthesis. Is it possible that you missed one before the citation?\");wordsInQuote.pop();hasQuoteErrorInSection=true;containsQuote=true;break;}else if(_i3===wordsinSectionLength){// If this is the last word in the section and doesn't contain any quotes, tell the user.\nerrors.push(\"Missing ending quotation marks!\");hasQuoteErrorInSection=true;containsQuote=true;break;}}quote=wordsInQuote.join(\" \");var startedCitationIndex=_i3+1;var containsCitation=false;var citation=[];// Get the citing of the quote after the quotation marks.\nwhile(true){_i3++;word=wordsInSection[_i3];if(firstDoubleQuote_CharValues.includes(word.charCodeAt(0))){// Could mean that this quote could be associated with the next quote?\n_i3--;break;}citation=findMlaCitations(word,startedCitationIndex,_i3,citation);if(citation[0].includes(\")\")&&citation[0].includes(\"(\")){// If citation was found\ncontainsCitationInSection=true;containsCitation=true;break;}else if(_i3===wordsInSection.length-1){break;}}if(containsCitation){citation=citation.join(\" \");}if(containsCitation&&containsQuote){addQuote(quote,secIndex,_i3);addCitation(quote,citation,secIndex,_i3);// Validate citation\nvar citationValid=validateCitationInText(wordsInSection,citation);if(!citationValid){}}else if(containsCitation&&!containsQuote){addCitationError(citation,\"No quote exists for the given citation\");}else if(!containsCitation&&containsQuote){// Could be a quote from different paragraph? Idk...\naddQuote(quote,secIndex,_i3);addQuoteError(quote,\"This quote does not have an in-text citation\");}if(containsQuote&&errors!==undefined){errors.forEach(function(error){addQuoteError(quote,error);});}//Repeat for multiple quotes/citations in paragraph.\n}i=_i3;};for(var i=0;i<wordsInSection.length;i++){_loop(i);}if(!containsQuoteInSection&&!hasQuoteErrorInSection){// If the section does not contain a quote in section or quote errors. Could it be a block citation?\ncontainsCitationInSection=findMlaBlockCitation(wordsInSection,secIndex);}if(containsQuoteInSection&&!containsCitationInSection){// This could possibly be a single cited paper!\n}if(!containsCitationInSection&&!containsQuoteInSection){addDocumentError(\"No quote or citation exists for this paragraph!\",secIndex,0);}}}/**\n  * Author, Title of source, Title of container, Other contributors\n  * Version, Number, Publisher, Publication date, Location.\n  */function findMlaWorksCited(sectionWorksCited,inputSections,totalNumberSections){for(var secIndex=sectionWorksCited;secIndex<totalNumberSections;secIndex++){var mlaWorksCitedObj=new MLAWorksCitation(inputSections[secIndex],secIndex);// DO NOT disable the comment below...\n// eslint-disable-next-line\nvar sentences=inputSections[secIndex].match(/[^\\.!\\?]+[\\.!\\?]+/g);// for (let sentIndex = 0; sentIndex < sentences.length)\nvar sentenceIndex=0;if(sentences===undefined){addDocumentError(\"Add your works citations at the end of the paper under the Works Cited section!\",secIndex,0);return;}/* Find Author and Author Acronym! */var sentence=sentences[sentenceIndex].trim().replace('.',\"\");var authorNames=sentence.split(\",\");var authorErrors=[];if(authorNames===undefined){addDocumentError(\"Add your works citations at the end of the paper under the Works Cited section!\",secIndex,0);return;}mlaWorksCitedObj.setAuthorIndex(sentenceIndex);if(authorNames.length===1){mlaWorksCitedObj.setAuthor(authorNames[0]);authorErrors.push(\"Author name must include first and last name in the following format\"+\" 'Last Name, First Name (Optional: Middle Initial/Name).'\");}else if(authorNames.length>2){mlaWorksCitedObj.setAuthor(sentence);authorErrors.push(\"Make sure to use the following format for the Author's name:\"+\" 'Last Name, First Name (Optional: Middle Initial/Name).'\");}else{(function(){var lastNames=authorNames[0].trim().split(\" \");var firstNames=authorNames[1].trim().split(\" \");var fullname=[];firstNames.forEach(function(word){fullname.push(capitalizeFirstLetter(word.toLowerCase()));});lastNames.forEach(function(word){fullname.push(capitalizeFirstLetter(word.toLowerCase()));});mlaWorksCitedObj.setAuthor(fullname.join(\" \"));var authorAcronym=[];firstNames.forEach(function(word){authorAcronym.push(word.charAt(0));});lastNames.forEach(function(word){authorAcronym.push(word.charAt(0));});mlaWorksCitedObj.setAuthorAcronym(authorAcronym.join(\"\"));// console.log(authorAcronym);\n// console.log(firstNames);\n// console.log(lastNames);\n})();}if(authorErrors!==undefined){(function(){var errors=mlaWorksCitedObj.getAuthorErrors();if(errors===undefined){errors=[];}authorErrors.forEach(function(error){errors.push(error);});mlaWorksCitedObj.setAuthorErrors(errors);})();}sentenceIndex+=1;/*   */worksCitedList.push(mlaWorksCitedObj);}if(worksCitedList[0]===undefined){return false;}return true;}function checkMlaHandler(e){e.preventDefault();documentErrorList=[];citationsErrorList=[];dataEntriesList=[];worksCitedList=[];var responseImportant=document.getElementById(\"responseImportant\");responseImportant.innerHTML=\"\";responseImportant.style.backgroundColor=\"#FF006A\";var inputText=document.getElementById(\"inputText\").value;var inputSections=inputText.split(\"\\n\");if(inputSections.length<=1){if(inputSections[0].length>1){responseImportant.innerHTML=\"Make sure you've copied your whole paper before checking! \"+\"Include the following headers: Full Name, Teacher, Class Name, Today's Date.\";return;}responseImportant.innerHTML=\"Copy and paste your paper to start!\";return;}/* Parse the headers! */var hasExtraLinesInHeaders=false;var hasMissingHeaders=false;var startParsingIndex=0;var inputHeaders=[];for(var _i4=0;_i4<inputSections.length;_i4++){if(inputSections[_i4].length<1){hasExtraLinesInHeaders=true;inputSections.splice(_i4,1);_i4--;}else if(inputSections[_i4].length>15){hasMissingHeaders=true;break;}else{inputHeaders.push(inputSections[_i4]);}if(inputHeaders!==undefined&&inputHeaders.length===4){break;}}/* Input Headers handling!! */if(inputHeaders===undefined){responseImportant.innerHTML=\"his paper is empty\";return;}else if(inputHeaders.length<4){addDocumentError(\"Missing headers! Headers must include: your name, your teacher's name, class name, and current date.\",0,0);}if(hasExtraLinesInHeaders){addDocumentError(\"Consider removing the extra lines between headers of your document.\",0,0);}if(hasMissingHeaders){addDocumentError(\"Header/Title is missing! Headers must include: your name, your teacher's name, class name, and current date.\"+\"If your title is over 15 words long, shorten it and click the Check Citation button again.\",0,0);}/* Parse up until the Title! */var inputTitle;var hasExtraLinesBeforeTitle=false;for(var _i5=inputHeaders.length;_i5<inputSections.length;_i5++){if(inputSections[_i5].length<2){hasExtraLinesBeforeTitle=true;inputSections.splice(_i5,1);_i5--;}else{inputTitle=inputSections[_i5];startParsingIndex=_i5+1;break;}}/* Title Handling */if(inputTitle===undefined){responseImportant.innerHTML=\"Please add more to your paper before checking!\";return;}if(inputSections[startParsingIndex].length<2||hasExtraLinesBeforeTitle){addDocumentError(\"Consider removing the extra lines before and after the Title of your document.\");}/* Parse the extra lines after the Title! We don't want to use them :) */for(var _i6=startParsingIndex;_i6<inputSections.length;_i6++){if(inputSections[_i6].length<2){inputSections.splice(_i6,1);_i6--;}}/* Removing any extra lines in the document.*/var startOfPaperIndex;for(var _i7=0;_i7<inputSections.length;_i7++){if(inputSections[_i7].length<2){inputSections.splice(_i7,1);_i7--;}else if(startOfPaperIndex===undefined&&inputSections[_i7].split(\" \").length>20){startOfPaperIndex=_i7;break;}}if(!startOfPaperIndex){responseImportant.innerHTML=\"Please add more to your paper before checking!\";return;}var sectionWorksCited;/* Give the section works cited the last section so the loop can work. */for(var _i8=startParsingIndex;_i8<inputSections.length;_i8++){var text=inputSections[_i8].trim().split(\" \");if(text.length===2){text=text.join(\" \");if(text.toLowerCase()===\"works cited\"){sectionWorksCited=_i8;}}}if(sectionWorksCited===undefined){sectionWorksCited=inputSections.length;// addDocumentError(\"Please include a works cited page at the end of your document. If your works cited page exists,\" +\n// \"make sure to have a single line named 'Works Cited' before the citations\", sectionWorksCited, inputSections.length -1);\nresponseImportant.innerHTML=\"Please include a works cited page at the end of your document. If your works cited page exists,\"+\" make sure to have a single line named 'Works Cited' before the citations\";return;}findMlaQuotes(startOfPaperIndex,inputSections,sectionWorksCited);/* Check for MLA Works Cited page!*/var hasWorksCitedCitations=false;if(sectionWorksCited<inputSections.length){hasWorksCitedCitations=findMlaWorksCited(sectionWorksCited+1,inputSections,inputSections.length);}if(!hasWorksCitedCitations){responseImportant.innerHTML=\"Add your source citations under your 'Works Cited' section at the end of the document.\";return;}/* Check that citations alone are valid */ // const root = document.getElementById(\"result\");\n/* This removes the nodes from the previous submitted text. */ // root.innerHTML = '';\n// const errorsRoot = document.getElementById(\"main-errors\");\n// for (let i = 0; i < errors.length; i++) {\n//   let errorText = document.createTextNode(errors[i]);\n//   let error = document.createElement(\"th\");\n//   error.appendChild(errorText);\n//   let row = document.createElement(\"tr\");\n//   row.appendChild(error);\n//   errorsRoot.appendChild(row);\n// }\n// for (let i = 0; i < citations.length; i++) {\n//   let citationText = document.createTextNode(citations[i]);\n//   let quoteText = document.createTextNode(quotes[i]);\n//   let quote = document.createElement(\"th\");\n//   let citation = document.createElement(\"th\");\n//   quote.appendChild(quoteText);\n//   citation.appendChild(citationText);\n//   let row = document.createElement(\"tr\");\n//   row.appendChild(quote);\n//   row.appendChild(citation);\n//   root.appendChild(row);\n// }\n// for (let i = 0; i < dataEntriesList.length; i ++) {\n//   let quoteKey = dataEntriesList[i];\n//   console.log(quoteKey);\n// }\nconsole.log(dataEntriesList);// console.log(inputSections);\n// console.log(JSON.stringify(dataEntriesList));\nconsole.log(citationsErrorList);console.log(worksCitedList);console.log(documentErrorList);console.log(\"\\nEND\\n\\n\");responseImportant.innerHTML=\"See results below\";responseImportant.style.backgroundColor=\"#3CD604\";}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Citation Checker\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"inputForm\",autoComplete:\"off\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"textarea\",{onChange:inputTextChangeHandler,id:\"inputText\",type:\"text\",required:true}),/*#__PURE__*/_jsx(\"label\",{id:\"responseImportant\",children:\"Copy and paste your text here\"}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom-row\",children:/*#__PURE__*/_jsx(\"input\",{onClick:checkMlaHandler,type:\"submit\",value:\"Check Paper\",name:\"\",className:\"btn\"})})]})]})});}export default App;","map":{"version":3,"names":["Quote","CitationError","DocumentError","MLAWorksCitation","App","documentErrorList","dataEntriesList","citationsErrorList","worksCitedList","firstDoubleQuote_CharValues","lastDoubleQuote_CharValues","inputTextChangeHandler","e","preventDefault","inputText","document","getElementById","value","length","responseImportant","innerHTML","style","backgroundColor","stripQuotations","quote","includes","charCodeAt","substring","replace","addCitationError","citation","secIndex","index","errorMessage","hasCitationInQuote","i","quoteToCheck","getQuote","quoteObject","getQuoteObject","citationToCheck","getCitation","citationErrors","getCitationErrors","undefined","push","setCitationErrors","citationObject","addCitation","citationStr","setCitation","setCitationIndex","split","setCitationSection","setCitationError","citationHasErrors","getCitationObject","console","log","splice","addQuote","quoteErrors","getQuoteErrors","setQuoteErrors","setQuoteIndex","setQuoteSection","addQuoteError","unshift","addDocumentError","documentErrorObject","removeMlaDecimal","word","chars","result","slice","capitalizeFirstLetter","charAt","toUpperCase","validateCitationInText","wordsInSection","sentences","join","match","sentencesWithQuotationCitation","sentenceIndex","sentence","hasBeginningQuoteInSentence","hasEndingQuoteInSentence","character","findMlaBlockCitation","startedCitationIndex","findMlaCitations","finalWord","findMlaQuotes","startingIndex","inputSections","sectionWorksCited","currentSection","containsQuoteInSection","containsCitationInSection","hasQuoteErrorInSection","containsQuote","errors","wordsInQuote","wordsinSectionLength","containsFinalQuote","pop","containsCitation","citationValid","forEach","error","findMlaWorksCited","totalNumberSections","mlaWorksCitedObj","trim","authorNames","authorErrors","setAuthorIndex","setAuthor","lastNames","firstNames","fullname","toLowerCase","authorAcronym","setAuthorAcronym","getAuthorErrors","setAuthorErrors","checkMlaHandler","hasExtraLinesInHeaders","hasMissingHeaders","startParsingIndex","inputHeaders","inputTitle","hasExtraLinesBeforeTitle","startOfPaperIndex","text","hasWorksCitedCitations"],"sources":["/usr/share/caddy/personal/formatter/src/App.js"],"sourcesContent":["import './App.css';\nimport {Quote} from './models/Quote.js';\nimport {CitationError} from './models/CitationError.js';\nimport {DocumentError} from './models/DocumentError.js';\nimport {MLAWorksCitation} from './models/MLAWorksCitation.js';\n\nfunction App() {\n  \n  let documentErrorList;\n  let dataEntriesList;\n  let citationsErrorList;\n  let worksCitedList;\n  const firstDoubleQuote_CharValues = [8220, 34];\n  const lastDoubleQuote_CharValues = [8221, 34];\n  // 33: !    46: .    59: ;    63: ?\n  \n  // Need Valid MLA inline-citation\n  // Check if Block Quotes work!\n  \n  function inputTextChangeHandler(e) {\n    e.preventDefault();\n    \n    let inputText = document.getElementById(\"inputText\").value;\n    \n    if (inputText.length === 0) {\n      const responseImportant = document.getElementById(\"responseImportant\");\n      responseImportant.innerHTML = \"Copy and paste your text here\";\n      responseImportant.style.backgroundColor = \"none\";\n    }\n  }\n  \n  function stripQuotations(quote) {\n    if (firstDoubleQuote_CharValues.includes(quote.charCodeAt(0))) {\n      quote = quote.substring(1);\n    }\n    if (lastDoubleQuote_CharValues.includes(quote.charCodeAt(quote.length -1))) {\n      quote = quote.substring(0, (quote.length -1));\n    }\n    quote.replace(\"\\\"\", \"\");\n    \n    return quote;\n  }\n  \n  function addCitationError(quote, citation, secIndex, index, errorMessage) {\n    quote = stripQuotations(quote);\n    let hasCitationInQuote = false;\n    \n    for (let i = 0; i < dataEntriesList.length; i++) {\n      let quoteToCheck = dataEntriesList[i].getQuote();\n      \n      if (quote === quoteToCheck) {\n        hasCitationInQuote = true;\n        let quoteObject = getQuoteObject(quote);\n        let citationToCheck = quoteObject.getCitation();\n        let citationErrors = quoteObject.getCitationErrors();\n        \n        if (citationErrors === undefined) {\n          citationErrors = [];\n        }\n        \n        if (citation === citationToCheck) {\n          citationErrors.push(\"This citation already exists for given quote.\");\n          // What about errorMessage here?\n          \n        } else {\n          citationErrors.push(errorMessage);\n          \n        }\n        \n        quoteObject.setCitationErrors(errorMessage);\n        dataEntriesList.push(quoteObject);\n        break;\n      }\n    }\n    \n    if (!hasCitationInQuote) {\n      let citationObject;\n      \n      for (let i = 0; i < citationsErrorList.length; i++) {\n        let citationToCheck = citationsErrorList[i].getCitation();\n        \n        if (citation === citationToCheck) {\n          citationObject = citationsErrorList[i];\n          let citationErrors = citationObject.getCitationErrors();\n          \n          if (citationErrors === undefined) {\n            citationErrors = [];\n          }\n          \n          citationErrors.push(\"This citation already exists.\");\n          citationObject.setCitationErrors(citationErrors);\n          break;\n        }\n      }\n    \n      if (citationObject === undefined) {\n        let citationObject = new CitationError(citation);\n        let citationErrors = [errorMessage];\n        citationObject.setCitationErrors(citationErrors);\n        \n      }\n      \n      citationsErrorList.push(citationObject);\n    }\n  }\n  \n  /* For now, there should only be one quote per citation! This will flip some time soon*/\n  function addCitation(quote, citation, secIndex, index) {\n    quote = stripQuotations(quote);\n    let quoteObject = undefined;\n    \n    for (let i = 0; i < dataEntriesList.length; i++) {\n      let quoteToCheck = dataEntriesList[i].getQuote();\n      \n      if (quote === quoteToCheck) {\n        quoteObject = getQuoteObject(quote);\n        let citationStr = quoteObject.getCitation();\n        \n        if (citationStr === undefined) {\n          quoteObject.setCitation(citation);\n          quoteObject.setCitationIndex(index - citation.split(\" \").length);\n          quoteObject.setCitationSection(secIndex);\n          \n        } else {\n          quoteObject.setCitationError(\"This Citation exists at least twice for the quote in this paper.\");\n          addCitationError(quote, citation, secIndex, index);\n        }\n        \n        dataEntriesList.push(quoteObject);\n        break;\n      }\n    }\n    \n    if (quoteObject === undefined) { // If quote does not exists with given citation.\n      let citationHasErrors = false;\n      \n      for (let i = 0; i < citationsErrorList.length; i++) { // Checking to see if has errors\n        let citationToCheck = citationsErrorList[i].getCitation();\n        \n        if (citation === citationToCheck) {\n          citationHasErrors = true;\n          let citationObject = getCitationObject(citation);\n          console.log(citationObject);\n          let citationErrors = citationObject.getCitationErrors();\n          \n          if (citationErrors === undefined) {\n            citationErrors = [];\n          }\n          citationErrors.push(\"This citation is not associated with any quote/block quote.\");\n          citationObject.setCitationErrors(citationErrors);\n          citationsErrorList.push(citationObject);\n          break;\n        }\n      }\n      \n      if (!citationHasErrors) {\n        let citationObject = new CitationError(citation);\n        citationsErrorList.push(citationObject);\n      }\n    }\n    \n  }\n  \n  function getCitationObject(citation) {\n    let citationObject;\n    \n    for (let i = 0; i < citationsErrorList.length; i++) {\n      let citationToCheck = citationsErrorList[i].getCitation();\n      \n      if (citation === citationToCheck) {\n        citationObject = citationsErrorList.splice(i, 1);\n        citationObject = citationObject[0];\n        break;\n      }\n    }\n    return citationObject;\n  }\n  \n  function getQuoteObject(quote) {\n    quote = stripQuotations(quote);\n    let quoteObject;\n    \n    for (let i = 0; i < dataEntriesList.length; i++) {\n      let quoteToCheck = dataEntriesList[i].getQuote();\n      \n      if (quote === quoteToCheck) {\n        quoteObject = dataEntriesList.splice(i, 1); //Removes the quoteObj from list.\n        quoteObject = quoteObject[0];\n        \n        break;\n      }\n    }\n    return quoteObject;\n  }\n  \n  function addQuote(quote, secIndex, index) {\n    quote = stripQuotations(quote);\n    let quoteObject;\n    \n    for (let i = 0; i < dataEntriesList.length; i++) {\n      let quoteToCheck = dataEntriesList[i].getQuote();\n      \n      if (quote === quoteToCheck) {\n        quoteObject = getQuoteObject(quote);\n        let quoteErrors = quoteObject.getQuoteErrors();\n        \n        if (quoteErrors === undefined) {\n          quoteErrors = [];\n        }\n        \n        quoteErrors.push(\"This quote already exists in this document\");\n        quoteObject.setQuoteErrors(quoteErrors);\n        break;\n      }\n    }\n    \n    if (quoteObject === undefined) {\n      quoteObject = new Quote(quote);\n      let quoteErrors = [];\n      \n      quoteObject.setQuoteErrors(quoteErrors);\n      quoteObject.setQuoteIndex(index - quote.split(\" \").length);\n      quoteObject.setQuoteSection(secIndex);\n    }\n    \n    dataEntriesList.push(quoteObject);\n  }\n  \n  function addQuoteError(quote, errorMessage) {\n    quote = stripQuotations(quote);\n    \n    let quoteObject = getQuoteObject(quote);\n    \n    if (quoteObject === undefined) {\n      console.log(\"SYSTEM ERROR: Cannot add error to a quote that does not exist\");\n      return undefined;\n    }\n    \n    let quoteErrors = quoteObject.getQuoteErrors();\n    if (quoteErrors === undefined) {\n      quoteErrors = [];\n    }\n    \n    quoteErrors.push(errorMessage);\n    quoteObject.setQuoteErrors(quoteErrors);\n    \n    dataEntriesList.unshift(quoteObject);\n  }\n  \n  function addDocumentError(errorMessage, secIndex, index) {\n    let documentErrorObject = new DocumentError(errorMessage, secIndex, index);\n    documentErrorList.push(documentErrorObject);\n  }\n  \n  function removeMlaDecimal(word) {\n    const chars = word.split('');\n    if (chars[(word.length-1)] === '.') { // If the last character is a decimal, remove it!\n      const result = word.slice(0, -1);\n      return result;\n    } else {\n      return word;\n    }\n  }\n  \n  function capitalizeFirstLetter(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }\n  \n  /** This should check that an author's name appears in here! Author must come from Works Cited list*/\n  function validateCitationInText(wordsInSection, citation) {\n    // DO NOT disable the comment below...\n    // eslint-disable-next-line\n    let sentences = wordsInSection.join(\" \").match( /[^\\.!\\?]+[\\.!\\?]+/g );\n    \n    let sentencesWithQuotationCitation = [];\n    // console.log(\"Citation to check: \" +citation);\n    \n    for (let sentenceIndex = 0; sentenceIndex < wordsInSection.length; sentenceIndex++) {\n      let sentence = sentences[sentenceIndex];\n      let hasBeginningQuoteInSentence = false;\n      let hasEndingQuoteInSentence = false;\n      \n      if (sentence === undefined) {\n        continue;\n      }\n      \n      for (let i = 0; i < sentence.length; i++) {\n        let character = sentence[i];\n        \n        if (!hasBeginningQuoteInSentence && firstDoubleQuote_CharValues.includes(character.charCodeAt(0))) {\n          hasBeginningQuoteInSentence = true;\n          \n        } else if (!hasEndingQuoteInSentence && lastDoubleQuote_CharValues.includes(character.charCodeAt(0))) {\n          hasEndingQuoteInSentence = true;\n          // console.log(\"Sentence: \"+sentence);\n          break;\n          \n        }\n        \n      }\n      \n      if (hasBeginningQuoteInSentence) {\n        sentencesWithQuotationCitation.push(sentence);\n        // console.log(\"Has beginning quote! \" +sentencesWithQuotationCitation.join(\" \"));\n        // console.log(sentencesWithQuotationCitation.join(\" \").includes(citation));\n      \n        if (hasEndingQuoteInSentence) { // IF IT HAS ENDING QUOTATION MARKS, THE CITATION MUST EXIST AFTER QUOTE!\n          // console.log(\"Quote found! \" +sentencesWithQuotationCitation.join(\" \"));\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  \n  function findMlaBlockCitation(wordsInSection, secIndex) {\n    \n    if (wordsInSection.join(\" \").includes(\")\") && wordsInSection.join(\" \").includes(\"(\")) { // Checks if the section contains a parenthesis. Possible block citation!\n      console.log(wordsInSection);\n      let citation = [];\n      let quote = [];\n      let i = 0;\n      let startedCitationIndex = 0;\n    \n      while (true) {\n        let word = wordsInSection[i];\n        \n        citation = findMlaCitations(word, startedCitationIndex, i, citation);\n        \n        if (citation[0].includes(\")\") && citation[0].includes(\"(\")) { // If citation was found\n          addQuote(quote.join(\" \"), secIndex, i);\n          addCitation(quote.join(\" \"), citation.join(\" \"), secIndex, i);\n          return true;\n          \n        } else if (!citation[0].includes(\"(\")) {\n          quote.push(word);\n        } else if (citation[0].includes(\"(\")) {\n          citation.push(word);\n        }\n        \n        i++;\n      }\n    }\n    return false;\n  }\n  \n  function findMlaCitations(word, startedCitationIndex, i, citation) {\n    \n    if (!word.includes(\"(\") && (citation === undefined)) { // If beginning of citation and doesn't include open parenthesis.\n      console.log(\"Citation does not come right after quote! WHOOPS\");\n      return [];\n      \n    } else if (word.includes(\"(\") && (startedCitationIndex === i)) { // If citation is right after quote.\n      \n      if (word.includes(\")\")) { // If word is also end of citation too.\n        const finalWord = removeMlaDecimal(word);\n        citation.push(finalWord);\n        return [citation.join(\" \")];\n      }\n      citation.push(word);\n      \n    } else if (word.includes(\")\")) { // If this is the end of the citation.\n      const finalWord = removeMlaDecimal(word);\n      citation.push(finalWord);\n      return [citation.join(\" \")];\n      \n    } else {\n      citation.push(word);\n    }\n    \n    return [citation.join(\" \")];\n  }\n  \n  /**\n   * Finds all of the quotes in MLA Format and adds them to the Quotes List! \n   */\n  function findMlaQuotes(startingIndex, inputSections, sectionWorksCited) {\n    \n    for (let secIndex = startingIndex; secIndex < sectionWorksCited-1; secIndex++) {\n      let currentSection = inputSections[secIndex].replace('\\t', \"\");\n      const wordsInSection = currentSection.split(\" \");\n      \n      if (wordsInSection.length < 2) { // We don't want empty sections!\n        continue;\n      }\n      \n      let containsQuoteInSection = false;\n      let containsCitationInSection = false;\n      let hasQuoteErrorInSection = false;\n      \n      /* Time to find the quotes in a section*/\n      for (let i = 0; i < wordsInSection.length; i++) {\n        let word = wordsInSection[i];\n        \n        let containsQuote = false;\n        let quote;\n        let errors = [];\n        \n        if (firstDoubleQuote_CharValues.includes(word.charCodeAt(0))) { // First quoted word found, now find the last.\n          let wordsInQuote = [];\n          wordsInQuote.push(word);\n          let wordsinSectionLength = wordsInSection.length -1;\n          \n          while (true) { // Checking word with ending quotation marks!\n            i++;\n            word = wordsInSection[i];\n            \n            word = removeMlaDecimal(word);\n            \n            const containsFinalQuote = (lastDoubleQuote_CharValues.includes(word.charCodeAt(word.length -1)));\n            wordsInQuote.push(word);\n            \n            if (containsFinalQuote) {\n              containsQuoteInSection = true;\n              containsQuote = true;\n              break;\n            } else if (word.includes(\"(\")) { // If a citation comes before an ending parenthesis, tell the user.\n              errors.push(\"Missing ending parenthesis. Is it possible that you missed one before the citation?\");\n              wordsInQuote.pop();\n              hasQuoteErrorInSection = true;\n              containsQuote = true;\n              break;\n            } else if (i === wordsinSectionLength) { // If this is the last word in the section and doesn't contain any quotes, tell the user.\n              errors.push(\"Missing ending quotation marks!\");\n              hasQuoteErrorInSection = true;\n              containsQuote = true;\n              break;\n            }\n          }\n          \n          quote = wordsInQuote.join(\" \");\n          \n          let startedCitationIndex = i+1;\n          let containsCitation = false;\n          let citation = [];\n          \n          // Get the citing of the quote after the quotation marks.\n          while (true) {\n            i++;\n            word = wordsInSection[i];\n            \n            if (firstDoubleQuote_CharValues.includes(word.charCodeAt(0))) { // Could mean that this quote could be associated with the next quote?\n              i--;\n              break;\n            }\n            \n            citation = findMlaCitations(word, startedCitationIndex, i, citation);\n            \n            if (citation[0].includes(\")\") && citation[0].includes(\"(\")) { // If citation was found\n              containsCitationInSection = true;\n              containsCitation = true;\n              break;\n            } else if (i === wordsInSection.length -1) {\n              break;\n            }\n          }\n          \n          if (containsCitation) {\n            citation = citation.join(\" \");\n          }\n          \n          \n          if (containsCitation && containsQuote) {\n            \n            addQuote(quote, secIndex, i);\n            addCitation(quote, citation, secIndex, i);\n            // Validate citation\n            let citationValid = validateCitationInText(wordsInSection, citation);\n            if (!citationValid) {\n              \n            }\n            \n          } else if (containsCitation && !containsQuote) {\n            addCitationError(citation, \"No quote exists for the given citation\");\n            \n          } else if (!containsCitation && containsQuote) {\n            // Could be a quote from different paragraph? Idk...\n            addQuote(quote, secIndex, i);\n            addQuoteError(quote, \"This quote does not have an in-text citation\");\n          }\n          \n          if (containsQuote && errors !== undefined) {\n            errors.forEach(error => {\n              addQuoteError(quote, error);\n            });\n          }\n          \n          //Repeat for multiple quotes/citations in paragraph.\n        }\n      }\n    \n      if (!containsQuoteInSection && !hasQuoteErrorInSection) { // If the section does not contain a quote in section or quote errors. Could it be a block citation?\n        containsCitationInSection = findMlaBlockCitation(wordsInSection, secIndex);\n      }\n      \n      if (containsQuoteInSection && !containsCitationInSection) { // This could possibly be a single cited paper!\n        \n      }\n      \n      if (!containsCitationInSection && !containsQuoteInSection) {\n        addDocumentError(\"No quote or citation exists for this paragraph!\", secIndex, 0);\n      }\n    }\n  }\n  \n  /**\n  * Author, Title of source, Title of container, Other contributors\n  * Version, Number, Publisher, Publication date, Location.\n  */\n  function findMlaWorksCited(sectionWorksCited, inputSections, totalNumberSections) {\n    \n    for (let secIndex = sectionWorksCited; secIndex < totalNumberSections; secIndex++) {\n      let mlaWorksCitedObj = new MLAWorksCitation(inputSections[secIndex], secIndex);\n      // DO NOT disable the comment below...\n      // eslint-disable-next-line\n      let sentences = inputSections[secIndex].match( /[^\\.!\\?]+[\\.!\\?]+/g );\n      // for (let sentIndex = 0; sentIndex < sentences.length)\n      let sentenceIndex = 0;\n      \n      if (sentences === undefined) {\n        addDocumentError(\"Add your works citations at the end of the paper under the Works Cited section!\", secIndex, 0);\n        return;\n      }\n      \n      /* Find Author and Author Acronym! */\n      let sentence = sentences[sentenceIndex].trim().replace('.', \"\");\n      let authorNames = sentence.split(\",\");\n      let authorErrors = [];\n      \n      if (authorNames === undefined) {\n        addDocumentError(\"Add your works citations at the end of the paper under the Works Cited section!\", secIndex, 0);\n        return;\n      }\n      \n      mlaWorksCitedObj.setAuthorIndex(sentenceIndex);\n      \n      if (authorNames.length === 1) {\n        mlaWorksCitedObj.setAuthor(authorNames[0]);\n        authorErrors.push(\"Author name must include first and last name in the following format\" +\n        \" 'Last Name, First Name (Optional: Middle Initial/Name).'\");\n      } else if (authorNames.length > 2) {\n        mlaWorksCitedObj.setAuthor(sentence);\n        authorErrors.push(\"Make sure to use the following format for the Author's name:\" +\n        \" 'Last Name, First Name (Optional: Middle Initial/Name).'\");\n      } else {\n        let lastNames = authorNames[0].trim().split(\" \");\n        let firstNames = authorNames[1].trim().split(\" \");\n        let fullname = [];\n        \n        firstNames.forEach(word => {\n          fullname.push(capitalizeFirstLetter(word.toLowerCase()));\n        });\n        lastNames.forEach(word => {\n          fullname.push(capitalizeFirstLetter(word.toLowerCase()));\n        });\n        \n        mlaWorksCitedObj.setAuthor(fullname.join(\" \"));\n        \n        let authorAcronym = [];\n        firstNames.forEach(word => {\n          authorAcronym.push(word.charAt(0));\n        });\n        lastNames.forEach(word => {\n          authorAcronym.push(word.charAt(0));\n        });\n        \n        mlaWorksCitedObj.setAuthorAcronym(authorAcronym.join(\"\"));\n        // console.log(authorAcronym);\n        // console.log(firstNames);\n        // console.log(lastNames);\n      }\n      \n      if (authorErrors !== undefined) {\n        let errors = mlaWorksCitedObj.getAuthorErrors();\n        \n        if (errors === undefined) {\n          errors = [];\n        }\n        authorErrors.forEach(error => {\n          errors.push(error);\n        });\n        \n        mlaWorksCitedObj.setAuthorErrors(errors);\n      }\n      \n      \n      \n      \n      sentenceIndex += 1;\n      /*   */\n      \n      worksCitedList.push(mlaWorksCitedObj);\n      \n    }\n    \n    if (worksCitedList[0] === undefined) {\n      return false;\n    }\n    \n    return true;\n  }\n  \n  function checkMlaHandler(e) {\n    e.preventDefault();\n    documentErrorList = [];\n    citationsErrorList = [];\n    dataEntriesList = [];\n    worksCitedList = [];\n    \n    const responseImportant = document.getElementById(\"responseImportant\");\n    responseImportant.innerHTML = \"\";\n    responseImportant.style.backgroundColor = \"#FF006A\";\n    \n    const inputText = document.getElementById(\"inputText\").value;\n    \n    const inputSections = inputText.split(\"\\n\");\n    if (inputSections.length <= 1) {\n      \n      if (inputSections[0].length > 1) {\n        responseImportant.innerHTML = \"Make sure you've copied your whole paper before checking! \" +\n        \"Include the following headers: Full Name, Teacher, Class Name, Today's Date.\";\n        return;\n      }\n      responseImportant.innerHTML = \"Copy and paste your paper to start!\";\n      return;\n    }\n\n    /* Parse the headers! */\n    let hasExtraLinesInHeaders = false;\n    let hasMissingHeaders = false;\n    let startParsingIndex = 0;\n    let inputHeaders = [];\n    for (let i = 0; i < inputSections.length; i++) {\n      \n      if (inputSections[i].length < 1) {\n        hasExtraLinesInHeaders = true;\n        inputSections.splice(i, 1);\n        i--;\n      } else if (inputSections[i].length > 15) {\n        hasMissingHeaders = true;\n        break;\n      } else {\n        inputHeaders.push(inputSections[i]);\n      }\n      \n      if (inputHeaders !== undefined && inputHeaders.length === 4) {\n        break;\n      }\n    }\n\n    /* Input Headers handling!! */\n    if (inputHeaders === undefined) {\n      responseImportant.innerHTML = \"his paper is empty\";\n      return;\n    } else if (inputHeaders.length < 4) {\n      addDocumentError(\"Missing headers! Headers must include: your name, your teacher's name, class name, and current date.\", 0, 0);\n    }\n    if (hasExtraLinesInHeaders) {\n      addDocumentError(\"Consider removing the extra lines between headers of your document.\", 0, 0);\n    }\n    if (hasMissingHeaders) {\n      addDocumentError(\"Header/Title is missing! Headers must include: your name, your teacher's name, class name, and current date.\" +\n      \"If your title is over 15 words long, shorten it and click the Check Citation button again.\", 0, 0);\n    }\n    \n    /* Parse up until the Title! */\n    let inputTitle;\n    let hasExtraLinesBeforeTitle = false;\n    for (let i = inputHeaders.length; i < inputSections.length; i++) {\n      \n      if (inputSections[i].length < 2) {\n        hasExtraLinesBeforeTitle = true;\n        inputSections.splice(i, 1);\n        i--;\n      } else {\n        inputTitle = inputSections[i];\n        startParsingIndex = i+1;\n        break;\n      }\n    }\n    \n    /* Title Handling */\n    if (inputTitle === undefined) {\n      responseImportant.innerHTML = \"Please add more to your paper before checking!\";\n      return;\n    }\n    if (inputSections[startParsingIndex].length < 2 || hasExtraLinesBeforeTitle) {\n      addDocumentError(\"Consider removing the extra lines before and after the Title of your document.\");\n    }\n    \n    /* Parse the extra lines after the Title! We don't want to use them :) */\n    for (let i = startParsingIndex; i < inputSections.length; i++) {\n      if (inputSections[i].length < 2) {\n        inputSections.splice(i, 1);\n        i--;\n      }\n    }\n    \n    /* Removing any extra lines in the document.*/\n    let startOfPaperIndex;\n    for (let i = 0; i < inputSections.length; i++) {\n      if (inputSections[i].length < 2) {\n        inputSections.splice(i, 1);\n        i--;\n      } else if (startOfPaperIndex === undefined && inputSections[i].split(\" \").length > 20) {\n        startOfPaperIndex = i;\n        break;\n      }\n    }\n    \n    if (!startOfPaperIndex) {\n      responseImportant.innerHTML = \"Please add more to your paper before checking!\";\n      return;\n    }\n    \n    let sectionWorksCited; \n    /* Give the section works cited the last section so the loop can work. */\n    for (let i = startParsingIndex; i < inputSections.length; i++) {\n      let text = inputSections[i].trim().split(\" \");\n      if (text.length === 2) {\n        text = text.join(\" \");\n        if (text.toLowerCase() === \"works cited\") {\n          sectionWorksCited = i;\n        }\n      }\n    }\n    \n    if (sectionWorksCited === undefined) {\n      sectionWorksCited = inputSections.length;\n      // addDocumentError(\"Please include a works cited page at the end of your document. If your works cited page exists,\" +\n      // \"make sure to have a single line named 'Works Cited' before the citations\", sectionWorksCited, inputSections.length -1);\n      responseImportant.innerHTML = \"Please include a works cited page at the end of your document. If your works cited page exists,\" +\n      \" make sure to have a single line named 'Works Cited' before the citations\";\n      return;\n    }\n    \n    findMlaQuotes(startOfPaperIndex, inputSections, sectionWorksCited);\n    \n    /* Check for MLA Works Cited page!*/\n    let hasWorksCitedCitations = false;\n    if (sectionWorksCited < inputSections.length) {\n      hasWorksCitedCitations = findMlaWorksCited(sectionWorksCited+1, inputSections, inputSections.length);\n    }\n    \n    if (!hasWorksCitedCitations) {\n      responseImportant.innerHTML = \"Add your source citations under your 'Works Cited' section at the end of the document.\";\n      return;\n    }\n    \n    /* Check that citations alone are valid */\n    \n    // const root = document.getElementById(\"result\");\n    \n    /* This removes the nodes from the previous submitted text. */\n    // root.innerHTML = '';\n    \n    // const errorsRoot = document.getElementById(\"main-errors\");\n    // for (let i = 0; i < errors.length; i++) {\n    //   let errorText = document.createTextNode(errors[i]);\n    //   let error = document.createElement(\"th\");\n      \n    //   error.appendChild(errorText);\n      \n    //   let row = document.createElement(\"tr\");\n    //   row.appendChild(error);\n    //   errorsRoot.appendChild(row);\n    // }\n    \n    // for (let i = 0; i < citations.length; i++) {\n    //   let citationText = document.createTextNode(citations[i]);\n    //   let quoteText = document.createTextNode(quotes[i]);\n      \n    //   let quote = document.createElement(\"th\");\n    //   let citation = document.createElement(\"th\");\n    //   quote.appendChild(quoteText);\n    //   citation.appendChild(citationText);\n      \n    //   let row = document.createElement(\"tr\");\n    //   row.appendChild(quote);\n    //   row.appendChild(citation);\n      \n    //   root.appendChild(row);\n    // }\n    \n    \n    // for (let i = 0; i < dataEntriesList.length; i ++) {\n    //   let quoteKey = dataEntriesList[i];\n    //   console.log(quoteKey);\n    // }\n    console.log(dataEntriesList);\n    // console.log(inputSections);\n    // console.log(JSON.stringify(dataEntriesList));\n    console.log(citationsErrorList);\n    console.log(worksCitedList);\n    console.log(documentErrorList);\n    console.log(\"\\nEND\\n\\n\");\n    \n    responseImportant.innerHTML = \"See results below\";\n    responseImportant.style.backgroundColor = \"#3CD604\";\n  }\n  \n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Citation Checker</h1>\n        <form className=\"inputForm\" autoComplete=\"off\">\n          <div className=\"input-field\">\n            <textarea onChange={inputTextChangeHandler} id=\"inputText\" type=\"text\" required/>\n            <label id=\"responseImportant\">Copy and paste your text here</label>\n            <span></span>\n          </div>\n          <div className=\"bottom-row\">\n            <input onClick={checkMlaHandler} type=\"submit\" value=\"Check Paper\" name=\"\" className=\"btn\"/>\n            {//<div id=\"errorImportant\" className=\"errorImportant\"/>\n            }\n          </div>\n        </form>\n        {\n        // <textarea id=\"inputText\" className=\"inputText\" value=\"Paste your entire essay here\"></textarea>\n        // <button onClick={checkMlaHandler}>Check Text</button>\n        }\n      </div>\n      \n      {\n      // <div className=\"result-container\">\n      //   <div className=\"errorImportant\" id=\"errorImportant\"></div>\n      //   <div id=\"title\" className=\"title\">Title</div>\n      //   <div id=\"main-errors\" className=\"main-errors\">\n      //   </div>\n      //   <div id=\"result\" className=\"result\">\n      //   </div>\n      // </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}