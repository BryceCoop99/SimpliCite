{"ast":null,"code":"var _jsxFileName = \"/usr/share/caddy/personal/formatter/src/App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  function checkTextHandler(e) {\n    e.preventDefault();\n    const firstDoubleQuote_CharVal = 8220;\n    const lastDoubleQuote_CharVal = 34;\n    let rando = 'Test\"';\n    console.log(\"Length of \" + rando + \" is \" + rando.length + \": \" + rando.charCodeAt(rando.length - 1));\n    const inputText = document.getElementById(\"inputText\").value;\n    console.log(inputText);\n    const inputWords = inputText.split(\" \");\n    let quotes = [];\n    for (let i = 0; i < inputWords.length; i++) {\n      let word = inputWords[i];\n      // console.log(word + \" \" +charCode);\n\n      if (word.charCodeAt(0) === firstDoubleQuote_CharVal) {\n        // First quoted word found, now find the last.\n        console.log(\"Checking: \" + word);\n        let wordsInQuote = [];\n        wordsInQuote.push(word);\n        while (true) {\n          // Checking word with ending quotation marks!\n          i++;\n          word = inputWords[i];\n          console.log(word);\n          // const lastIndex = word.length;\n          // console.log(lastIndex);\n          console.log(word.charCodeAt(word.length - 1));\n          const containsFinalQuote = word.charCodeAt(word.length - 1) === lastDoubleQuote_CharVal;\n          if (containsFinalQuote) {\n            console.log(\"Correct word! It was: \" + word);\n            wordsInQuote.push(word);\n            break;\n          }\n          wordsInQuote.push(word);\n        }\n        quotes.push(wordsInQuote.split());\n      }\n    }\n    console.log(quotes);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"document\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"inputText\",\n        className: \"inputText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkTextHandler,\n        children: \"Check Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","checkTextHandler","e","preventDefault","firstDoubleQuote_CharVal","lastDoubleQuote_CharVal","rando","console","log","length","charCodeAt","inputText","document","getElementById","value","inputWords","split","quotes","i","word","wordsInQuote","push","containsFinalQuote"],"sources":["/usr/share/caddy/personal/formatter/src/App.js"],"sourcesContent":["import './App.css';\n\nfunction App() {\n  \n  function checkTextHandler(e) {\n    e.preventDefault();\n    const firstDoubleQuote_CharVal = 8220;\n    const lastDoubleQuote_CharVal = 34;\n    let rando = 'Test\"';\n    console.log(\"Length of \" +rando+ \" is \" +rando.length + \": \" +rando.charCodeAt(rando.length-1));\n    \n    const inputText = document.getElementById(\"inputText\").value;\n    console.log(inputText);\n    const inputWords = inputText.split(\" \");\n    \n    let quotes = [];\n    for (let i = 0; i < inputWords.length; i++) {\n      let word = inputWords[i];\n      // console.log(word + \" \" +charCode);\n      \n      if (word.charCodeAt(0) === firstDoubleQuote_CharVal) { // First quoted word found, now find the last.\n        console.log(\"Checking: \" +word);\n        let wordsInQuote = [];\n        wordsInQuote.push(word);\n        \n        while (true) { // Checking word with ending quotation marks!\n          i++;\n          word = inputWords[i];\n          console.log(word);\n          // const lastIndex = word.length;\n          // console.log(lastIndex);\n          console.log(word.charCodeAt(word.length -1));\n          const containsFinalQuote = (word.charCodeAt(word.length -1) === lastDoubleQuote_CharVal);\n          \n          if (containsFinalQuote) {\n            console.log(\"Correct word! It was: \" +word);\n            wordsInQuote.push(word);\n            break;\n          }\n          wordsInQuote.push(word);\n        }\n        \n        quotes.push(wordsInQuote.split());\n      }\n    }\n    console.log(quotes);\n  }\n  \n  return (\n    <div className=\"App\">\n      <div className=\"document\">\n        <textarea id=\"inputText\" className=\"inputText\"/>\n        <button onClick={checkTextHandler}>Check Text</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAAC;AAEnB,SAASA,GAAG,GAAG;EAEb,SAASC,gBAAgB,CAACC,CAAC,EAAE;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,wBAAwB,GAAG,IAAI;IACrC,MAAMC,uBAAuB,GAAG,EAAE;IAClC,IAAIC,KAAK,GAAG,OAAO;IACnBC,OAAO,CAACC,GAAG,CAAC,YAAY,GAAEF,KAAK,GAAE,MAAM,GAAEA,KAAK,CAACG,MAAM,GAAG,IAAI,GAAEH,KAAK,CAACI,UAAU,CAACJ,KAAK,CAACG,MAAM,GAAC,CAAC,CAAC,CAAC;IAE/F,MAAME,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;IAC5DP,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;IACtB,MAAMI,UAAU,GAAGJ,SAAS,CAACK,KAAK,CAAC,GAAG,CAAC;IAEvC,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,CAACN,MAAM,EAAES,CAAC,EAAE,EAAE;MAC1C,IAAIC,IAAI,GAAGJ,UAAU,CAACG,CAAC,CAAC;MACxB;;MAEA,IAAIC,IAAI,CAACT,UAAU,CAAC,CAAC,CAAC,KAAKN,wBAAwB,EAAE;QAAE;QACrDG,OAAO,CAACC,GAAG,CAAC,YAAY,GAAEW,IAAI,CAAC;QAC/B,IAAIC,YAAY,GAAG,EAAE;QACrBA,YAAY,CAACC,IAAI,CAACF,IAAI,CAAC;QAEvB,OAAO,IAAI,EAAE;UAAE;UACbD,CAAC,EAAE;UACHC,IAAI,GAAGJ,UAAU,CAACG,CAAC,CAAC;UACpBX,OAAO,CAACC,GAAG,CAACW,IAAI,CAAC;UACjB;UACA;UACAZ,OAAO,CAACC,GAAG,CAACW,IAAI,CAACT,UAAU,CAACS,IAAI,CAACV,MAAM,GAAE,CAAC,CAAC,CAAC;UAC5C,MAAMa,kBAAkB,GAAIH,IAAI,CAACT,UAAU,CAACS,IAAI,CAACV,MAAM,GAAE,CAAC,CAAC,KAAKJ,uBAAwB;UAExF,IAAIiB,kBAAkB,EAAE;YACtBf,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAEW,IAAI,CAAC;YAC3CC,YAAY,CAACC,IAAI,CAACF,IAAI,CAAC;YACvB;UACF;UACAC,YAAY,CAACC,IAAI,CAACF,IAAI,CAAC;QACzB;QAEAF,MAAM,CAACI,IAAI,CAACD,YAAY,CAACJ,KAAK,EAAE,CAAC;MACnC;IACF;IACAT,OAAO,CAACC,GAAG,CAACS,MAAM,CAAC;EACrB;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB;QAAU,EAAE,EAAC,WAAW;QAAC,SAAS,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE,eAChD;QAAQ,OAAO,EAAEhB,gBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA;EAClD;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KAtDQD,GAAG;AAwDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}