{"ast":null,"code":"import _slicedToArray from\"/usr/share/caddy/personal/formatter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import{Quote}from'./models/Quote.js';import{CitationError}from'./models/CitationError.js';import{DocumentError}from'./models/DocumentError.js';import{MLAWorksCitation}from'./models/MLAWorksCitation.js';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var documentErrorList;var dataEntriesList;var citationsErrorList;var worksCitedList;var startOfPaperIndex;var sectionWorksCited;var _useState=useState(\"MLA\"),_useState2=_slicedToArray(_useState,2),selectedFormat=_useState2[0],setSelectedFormat=_useState2[1];var firstDoubleQuote_CharValues=[8220,34];var lastDoubleQuote_CharValues=[8221,34];// 33: !    46: .    59: ;    63: ?\n// Need Valid MLA inline-citation\nfunction selectedFormatHandler(e){e.preventDefault();var value=document.getElementById(\"selectedFormat\").value;if(value!==selectedFormat){if(selectedFormat===\"MLA\"){setSelectedFormat(\"APA\");}else{setSelectedFormat(\"MLA\");}}}function inputTextOnChange(e){e.preventDefault();var responseImportant=document.getElementById(\"responseImportant\");if(responseImportant.innerHTML===\"Copy and paste your text here\"){responseImportant.innerHTML=\"Click Check Paper!\";responseImportant.style.backgroundColor=\"#ff006a\";}}function inputTextChangeOnBlur(e){e.preventDefault();var inputText=document.getElementById(\"inputText\").value;if(inputText.length===0){var responseImportant=document.getElementById(\"responseImportant\");responseImportant.innerHTML=\"Copy and paste your text here\";responseImportant.style.backgroundColor=\"transparent\";}}function inputTextChangeOnFocus(e){e.preventDefault();var responseImportant=document.getElementById(\"responseImportant\");if(responseImportant.innerHTML!==\"See results below\"){responseImportant.style.backgroundColor=\"#ff006a\";}}function clearTextArea(e){e.preventDefault();document.getElementById(\"inputText\").value=\"\";var responseImportant=document.getElementById(\"responseImportant\");responseImportant.innerHTML=\"Copy and paste your text here\";responseImportant.style.backgroundColor=\"transparent\";}function stripQuotations(quote){if(firstDoubleQuote_CharValues.includes(quote.charCodeAt(0))){quote=quote.substring(1);}if(lastDoubleQuote_CharValues.includes(quote.charCodeAt(quote.length-1))){quote=quote.substring(0,quote.length-1);}quote.replace(\"\\\"\",\"\");return quote;}function addToCitationErrorList(citation,secIndex,index,errorMessage){var citationObject;for(var i=0;i<citationsErrorList.length;i++){var citationToCheck=citationsErrorList[i].getCitation();if(citation===citationToCheck){citationObject=getCitationObject(citation);var citationErrors=citationObject.getCitationErrors();if(citationErrors===undefined){citationErrors=[];}citationErrors.push(\"This citation already exists.\");citationObject.setCitationErrors(citationErrors);break;}}if(citationObject===undefined){citationObject=new CitationError(citation);var _citationErrors=[errorMessage];citationObject.setCitationErrors(_citationErrors);citationObject.setCitationIndex(index);citationObject.setCitationSection(secIndex);}citationsErrorList.push(citationObject);}function addCitationError(quote,citation,secIndex,index,errorMessage){quote=stripQuotations(quote);var quoteObject;/* If this is a citation for a quote */for(var i=0;i<dataEntriesList.length;i++){var quoteToCheck=dataEntriesList[i].getQuote();if(quote===quoteToCheck){quoteObject=getQuoteObject(quote);var citationToCheck=quoteObject.getCitation();var citationErrors=quoteObject.getCitationErrors();if(citationErrors===undefined){citationErrors=[];}if(citation===citationToCheck){citationErrors.push(\"This citation already exists for given quote.\");// What about errorMessage here?\n}else{citationErrors.push(errorMessage);}quoteObject.setCitationErrors(errorMessage);dataEntriesList.push(quoteObject);return;}}if(quoteObject===undefined){console.log(\"Could not add citation error to quotes list.\");}}/* For now, there should only be one quote per citation! This will flip some time soon*/function addCitation(quote,citation,secIndex,index){quote=stripQuotations(quote);var quoteObject=undefined;for(var i=0;i<dataEntriesList.length;i++){var quoteToCheck=dataEntriesList[i].getQuote();if(quote===quoteToCheck){quoteObject=getQuoteObject(quote);var citationStr=quoteObject.getCitation();if(citationStr===undefined){quoteObject.setCitation(citation);quoteObject.setCitationIndex(index);quoteObject.setCitationSection(secIndex);}else{quoteObject.setCitationError(\"This Citation exists at least twice for the quote in this paper.\");addCitationError(quote,citation,secIndex,index);}dataEntriesList.push(quoteObject);break;}}if(quoteObject===undefined){// If quote does not exists with given citation.\nvar citationHasErrors=false;for(var _i=0;_i<citationsErrorList.length;_i++){// Checking to see if has errors\nvar citationToCheck=citationsErrorList[_i].getCitation();if(citation===citationToCheck){citationHasErrors=true;var citationObject=getCitationObject(citation);console.log(citationObject);var citationErrors=citationObject.getCitationErrors();if(citationErrors===undefined){citationErrors=[];}citationErrors.push(\"This citation is not associated with any quote/block quote.\");citationObject.setCitationErrors(citationErrors);citationsErrorList.push(citationObject);break;}}if(!citationHasErrors){var _citationObject=new CitationError(citation);citationsErrorList.push(_citationObject);}}}function getCitationObject(citation){var citationObject;for(var i=0;i<citationsErrorList.length;i++){var citationToCheck=citationsErrorList[i].getCitation();if(citation===citationToCheck){citationObject=citationsErrorList.splice(i,1);citationObject=citationObject[0];break;}}return citationObject;}function getQuoteObject(quote){quote=stripQuotations(quote);var quoteObject;for(var i=0;i<dataEntriesList.length;i++){var quoteToCheck=dataEntriesList[i].getQuote();if(quote===quoteToCheck){quoteObject=dataEntriesList.splice(i,1);//Removes the quoteObj from list.\nquoteObject=quoteObject[0];break;}}return quoteObject;}function addQuote(quote,secIndex,index){quote=stripQuotations(quote);var quoteObject;for(var i=0;i<dataEntriesList.length;i++){var quoteToCheck=dataEntriesList[i].getQuote();if(quote===quoteToCheck){quoteObject=getQuoteObject(quote);var quoteErrors=quoteObject.getQuoteErrors();if(quoteErrors===undefined){quoteErrors=[];}quoteErrors.push(\"This quote already exists in this document\");quoteObject.setQuoteErrors(quoteErrors);break;}}if(quoteObject===undefined){quoteObject=new Quote(quote);var _quoteErrors=[];quoteObject.setQuoteErrors(_quoteErrors);quoteObject.setQuoteIndex(index);quoteObject.setQuoteSection(secIndex);}dataEntriesList.push(quoteObject);}function addQuoteError(quote,errorMessage){quote=stripQuotations(quote);var quoteObject=getQuoteObject(quote);if(quoteObject===undefined){console.log(\"SYSTEM ERROR: Cannot add error to a quote that does not exist\");return undefined;}var quoteErrors=quoteObject.getQuoteErrors();if(quoteErrors===undefined){quoteErrors=[];}quoteErrors.push(errorMessage);quoteObject.setQuoteErrors(quoteErrors);dataEntriesList.unshift(quoteObject);}function addDocumentError(errorMessage,secIndex,index){var documentErrorObject=new DocumentError(errorMessage,secIndex,index);documentErrorList.push(documentErrorObject);}function removeMlaDecimal(word){var chars=word.split('');if(chars[word.length-1]==='.'){// If the last character is a decimal, remove it!\nvar result=word.slice(0,-1);return result;}else{return word;}}function capitalizeFirstLetter(word){return word.charAt(0).toUpperCase()+word.slice(1);}/** This should check that an author's name appears in here! Author must come from Works Cited list*/function validateCitationInText(wordsInSection,citation){// DO NOT disable the comment below...\n// eslint-disable-next-line\nvar sentences=wordsInSection.join(\" \").match(/[^\\.!\\?]+[\\.!\\?]+/g);var sentencesWithQuotationCitation=[];// console.log(\"Citation to check: \" +citation);\nfor(var sentenceIndex=0;sentenceIndex<wordsInSection.length;sentenceIndex++){var sentence=sentences[sentenceIndex];var hasBeginningQuoteInSentence=false;var hasEndingQuoteInSentence=false;if(sentence===undefined){continue;}for(var i=0;i<sentence.length;i++){var character=sentence[i];if(!hasBeginningQuoteInSentence&&firstDoubleQuote_CharValues.includes(character.charCodeAt(0))){hasBeginningQuoteInSentence=true;}else if(!hasEndingQuoteInSentence&&lastDoubleQuote_CharValues.includes(character.charCodeAt(0))){hasEndingQuoteInSentence=true;// console.log(\"Sentence: \"+sentence);\nbreak;}}if(hasBeginningQuoteInSentence){sentencesWithQuotationCitation.push(sentence);// console.log(\"Has beginning quote! \" +sentencesWithQuotationCitation.join(\" \"));\n// console.log(sentencesWithQuotationCitation.join(\" \").includes(citation));\nif(hasEndingQuoteInSentence){// IF IT HAS ENDING QUOTATION MARKS, THE CITATION MUST EXIST AFTER QUOTE!\n// console.log(\"Quote found! \" +sentencesWithQuotationCitation.join(\" \"));\nreturn true;}}}return false;}function findMlaBlockCitation(wordsInSection,secIndex){if(wordsInSection.join(\" \").includes(\")\")&&wordsInSection.join(\" \").includes(\"(\")){// Checks if the section contains a parenthesis. Possible block citation!\nconsole.log(wordsInSection);var citation=[];var quote=[];var i=0;var startedCitationIndex=0;while(true){var word=wordsInSection[i];citation=findMlaCitations(word,startedCitationIndex,i,citation);if(citation[0].includes(\")\")&&citation[0].includes(\"(\")){// If citation was found\naddQuote(quote.join(\" \"),secIndex,0);addCitation(quote.join(\" \"),citation.join(\" \"),secIndex,i);return true;}else if(!citation[0].includes(\"(\")){quote.push(word);}else if(citation[0].includes(\"(\")){citation.push(word);}i++;}}return false;}function findMlaCitations(word,startedCitationIndex,i,citation){if(!word.includes(\"(\")&&citation===undefined){// If beginning of citation and doesn't include open parenthesis.\nconsole.log(\"Citation does not come right after quote! WHOOPS\");return[];}else if(word.includes(\"(\")&&startedCitationIndex===i){// If citation is right after quote.\nif(word.includes(\")\")){// If word is also end of citation too.\nvar finalWord=removeMlaDecimal(word);citation.push(finalWord);return[citation.join(\" \")];}citation.push(word);}else if(word.includes(\")\")){// If this is the end of the citation.\nvar _finalWord=removeMlaDecimal(word);citation.push(_finalWord);return[citation.join(\" \")];}else{citation.push(word);}return[citation.join(\" \")];}/**\n   * Finds all of the quotes in MLA Format and adds them to the Quotes List! \n   */function findMlaQuotes(startingIndex,inputSections,sectionWorksCited){var _loop=function _loop(secIndex){var currentSection=inputSections[secIndex].replace('\\t',\"\");var wordsInSection=currentSection.split(\" \");if(wordsInSection.length<2){// We don't want empty sections!\nreturn\"continue\";}var containsQuoteInSection=false;var containsCitationInSection=false;var hasQuoteErrorInSection=false;/* Time to find the quotes in a section*/var _loop2=function _loop2(_i2){var word=wordsInSection[_i2];var containsQuote=false;var quote=void 0;var quoteErrors=[];var citationErrors=[];if(firstDoubleQuote_CharValues.includes(word.charCodeAt(0))){// First quoted word found, now find the last.\nvar wordsInQuote=[];wordsInQuote.push(word);var wordsinSectionLength=wordsInSection.length-1;var quoteIndex=_i2;while(true){// Checking word with ending quotation marks!\n_i2++;word=wordsInSection[_i2];word=removeMlaDecimal(word);var containsFinalQuote=lastDoubleQuote_CharValues.includes(word.charCodeAt(word.length-1));wordsInQuote.push(word);if(containsFinalQuote){containsQuoteInSection=true;containsQuote=true;break;}else if(word.includes(\"(\")){// If a citation comes before an ending parenthesis, tell the user.\nquoteErrors.push(\"Missing ending parenthesis. Is it possible that you missed one before the citation?\");wordsInQuote.pop();hasQuoteErrorInSection=true;containsQuote=true;break;}else if(_i2===wordsinSectionLength){// If this is the last word in the section and doesn't contain any quotes, tell the user.\nquoteErrors.push(\"Missing ending quotation marks!\");hasQuoteErrorInSection=true;containsQuote=true;break;}}quote=wordsInQuote.join(\" \");var startedCitationIndex=_i2+1;var containsCitation=false;var citation=[];var citationIndex=0;var citationIndexFound=false;var citationRightAfterQuote=true;// Get the citing of the quote after the quotation marks.\nwhile(true){_i2++;if(wordsInSection.length===_i2){break;}word=wordsInSection[_i2];if(firstDoubleQuote_CharValues.includes(word.charCodeAt(0))){// Could mean that this quote could be associated with the next quote?\n_i2--;break;}citation=findMlaCitations(word,startedCitationIndex,_i2,citation);/* If citation hasn't been found yet, give it the index now that it's found!*/if(!citationIndexFound&&citation[0].includes(\"(\")){citationIndexFound=true;citationIndex=_i2;if(citation[0].includes(\")\")){// If this citation is also the last one, break!\ncontainsCitationInSection=true;containsCitation=true;break;}continue;}if(citation[0].includes(\")\")&&citation[0].includes(\"(\")){// If citation was found\ncontainsCitationInSection=true;containsCitation=true;break;}/* If the citation index isn't found yet and it's not the last word in the section, continue to next iteration*/if(containsQuote&&!citationIndexFound&&_i2!==wordsInSection.length-1){citationRightAfterQuote=false;citation.splice(0,citation.length);continue;}}if(containsCitation){citation=citation.join(\" \");}/* If there's a quote where the citation doesn't come right after. Suggestion! */if(!citationRightAfterQuote&&containsQuote){citationErrors.push(\"Suggestion: Add citation directly after the quote.\");}/* If there's a citation and a quote! */if(containsCitation&&containsQuote){addQuote(quote,secIndex,quoteIndex);addCitation(quote,citation,secIndex,citationIndex);// Validate citation\nvar citationValid=validateCitationInText(wordsInSection,citation);if(!citationValid){}}else if(containsCitation&&!containsQuote){// If there's only a citation\naddToCitationErrorList(citation,secIndex,citationIndex,\"No quote exists for the given citation\");}else if(!containsCitation&&containsQuote){// If there's only a quote\n// Could be a quote from different paragraph? Idk...\nconsole.log(citation);addQuote(quote,secIndex,quoteIndex);// let quoteLength = quote.length;\n// addCitationError(quote, )\naddQuoteError(quote,\"This quote does not have an in-text citation\");}if(containsQuote&&quoteErrors!==undefined){quoteErrors.forEach(function(error){addQuoteError(quote,error);});}if(containsCitation&&citationErrors!==undefined){citationErrors.forEach(function(error){addToCitationErrorList(citation,secIndex,citationIndex,error);});}//Repeat for multiple quotes/citations in paragraph.\n}i=_i2;};for(var i=0;i<wordsInSection.length;i++){_loop2(i);}if(!containsQuoteInSection&&!hasQuoteErrorInSection){// If the section does not contain a quote in section or quote errors. Could it be a block citation?\ncontainsCitationInSection=findMlaBlockCitation(wordsInSection,secIndex);}if(containsQuoteInSection&&!containsCitationInSection){// This could possibly be a single cited paper!\n}if(!containsCitationInSection&&!containsQuoteInSection){addDocumentError(\"No quote or citation exists for this paragraph!\",secIndex,0);}};for(var secIndex=startingIndex;secIndex<sectionWorksCited;secIndex++){var _ret=_loop(secIndex);if(_ret===\"continue\")continue;}}/**\n  * Author, Title of source, Title of container, Other contributors\n  * Version, Number, Publisher, Publication date, Location.\n  */function findMlaWorksCited(sectionWorksCited,inputSections,totalNumberSections){for(var secIndex=sectionWorksCited;secIndex<totalNumberSections;secIndex++){var mlaWorksCitedObj=new MLAWorksCitation(inputSections[secIndex],secIndex);// DO NOT disable the comment below...\n// eslint-disable-next-line\nvar sentences=inputSections[secIndex].match(/[^\\.!\\?]+[\\.!\\?]+/g);// for (let sentIndex = 0; sentIndex < sentences.length)\nvar sentenceIndex=0;if(sentences===null){// This is null instead of undefined because of the funky .match() function above.\naddDocumentError(\"Add your works citations at the end of the paper under the Works Cited section!\",secIndex,0);return;}/* Find Author and Author Acronym! */var authorSentence=sentences[sentenceIndex].trim();authorSentence=authorSentence.replace('.',\"\");// console.log(authorSentence);\n// console.log(secIndex);\n// if (authorSentence)\nvar authorNames=authorSentence.split(\",\");var authorErrors=[];if(authorNames===undefined){addDocumentError(\"Add your works citations at the end of the paper under the Works Cited section!\",secIndex,0);return;}mlaWorksCitedObj.setAuthorIndex(sentenceIndex);// console.log(authorNames);\nif(authorNames.length===1){mlaWorksCitedObj.setAuthor(authorNames[0]);authorErrors.push(\"Author name must include first and last name in the following format\"+\" 'Last Name, First Name (Optional: Middle Initial/Name).'\");}else if(authorNames.length>2){mlaWorksCitedObj.setAuthor(authorSentence);authorErrors.push(\"Make sure to use the following format for the Author's name:\"+\" 'Last Name, First Name (Optional: Middle Initial/Name).'\");}else{(function(){var lastNames=authorNames[0].trim().split(\" \");var firstNames=authorNames[1].trim().split(\" \");var fullname=[];firstNames.forEach(function(word){fullname.push(capitalizeFirstLetter(word.toLowerCase()));});lastNames.forEach(function(word){fullname.push(capitalizeFirstLetter(word.toLowerCase()));});mlaWorksCitedObj.setAuthor(fullname.join(\" \"));var authorAcronym=[];firstNames.forEach(function(word){authorAcronym.push(word.charAt(0));});lastNames.forEach(function(word){authorAcronym.push(word.charAt(0));});mlaWorksCitedObj.setAuthorAcronym(authorAcronym.join(\"\"));// console.log(authorAcronym);\n// console.log(firstNames);\n// console.log(lastNames);\n})();}if(authorErrors!==undefined){(function(){var errors=mlaWorksCitedObj.getAuthorErrors();if(errors===undefined){errors=[];}authorErrors.forEach(function(error){errors.push(error);});mlaWorksCitedObj.setAuthorErrors(errors);})();}sentenceIndex+=1;/*   */worksCitedList.push(mlaWorksCitedObj);}if(worksCitedList[0]===undefined){return false;}return true;}function insertCommentIntoArray(array,index,commentType,comment,wordLength){if(array.length<2){array.push(index);array.push(commentType);array.push(comment);array.push(wordLength);return array;}for(var _i3=0;_i3<array.length;_i3+=4){var indexToCheck=array[_i3];if(index<=indexToCheck){array.splice(_i3,0,wordLength);array.splice(_i3,0,comment);array.splice(_i3,0,commentType);array.splice(_i3,0,index);return array;}}array.push(index);array.push(commentType);array.push(comment);array.push(wordLength);return array;}/* Creates an array that holds indexes with errors/suggestions/correct statements for printing! */function createSectionsArray(totalNumberOfSections){var sectionsArray=[];var _loop3=function _loop3(sectionIndex){var commentsArray=[];// The index & comment to the error!\n/* Documents List! */documentErrorList.forEach(function(documentErrorObj){if(documentErrorObj.getSection()===sectionIndex){var errorMessage=documentErrorObj.getError();var errorMessageLower=errorMessage.toLowerCase();var errorType=\"Document Error\";if(errorMessageLower.includes(\"suggestion\")){errorType=\"Document Suggestion\";}commentsArray=insertCommentIntoArray(commentsArray,documentErrorObj.getIndex(),errorType,errorMessage,0);}});/* Quotes/Citations List! */dataEntriesList.forEach(function(quoteObject){// Quotes \nif(quoteObject.getQuoteSection()===sectionIndex){var quoteWordLength=quoteObject.getQuote().split(\" \").length;var errors=quoteObject.getQuoteErrors();if(errors===undefined){// There should always be quote errors... for some reason :D\nreturn;}if(errors.length<1){commentsArray=insertCommentIntoArray(commentsArray,quoteObject.getQuoteIndex(),\"Correct Quotation\",\"Correct quote format!\",quoteWordLength);}else{for(var _i4=0;_i4<errors.length;_i4++){var errorMessage=errors[_i4];var errorMesssageLower=errorMessage.toLowerCase();var messageType=\"Quotation Error\";if(errorMesssageLower.includes(\"suggestion\")){messageType=\"Quotation Suggestion\";}commentsArray=insertCommentIntoArray(commentsArray,quoteObject.getQuoteIndex(),messageType,errors[_i4],quoteWordLength);}}}// Citations\nif(quoteObject.getCitationSection()!==undefined&&quoteObject.getCitationSection()===sectionIndex){var citationWordLength=quoteObject.getCitation().split(\" \").length;var _errors=quoteObject.getCitationErrors();if(_errors===undefined||_errors.length<1){// If there aren't any errors\ncommentsArray=insertCommentIntoArray(commentsArray,quoteObject.getCitationIndex(),\"Correct Citation\",\"Correct Citation.\",citationWordLength);}else{for(var _i5=0;_i5<_errors.length;_i5++){// insert each error!\nvar _errorMessage=_errors[_i5];var _errorMesssageLower=_errorMessage.toLowerCase();var _messageType=\"Citation Error\";if(_errorMesssageLower.includes(\"suggestion\")){_messageType=\"Citation Suggestion\";}commentsArray=insertCommentIntoArray(commentsArray,quoteObject.getCitationIndex(),_messageType,_errors[_i5],citationWordLength);}}}});/* Citation Errors List! */citationsErrorList.forEach(function(citationError){if(citationError.getCitationSection()===sectionIndex){var errors=citationError.getCitationErrors();if(errors===undefined){console.log(\"SYSTEM ERROR: citation error must include error message.\");return;}for(var _i6=0;_i6<errors.length;_i6++){var errorMessage=errors[_i6];var errorMesssageLower=errorMessage.toLowerCase();var messageType=\"Citation Error\";if(errorMesssageLower.includes(\"suggestion\")){messageType=\"Citation Suggestion\";}var wordLength=citationError.getCitation().split(\" \").length;commentsArray=insertCommentIntoArray(commentsArray,citationError.getCitationIndex(),messageType,errorMessage,wordLength);}}});/* Works Cited List! */worksCitedList.forEach(function(worksCitedObject){if(worksCitedObject.getSectionIndex()===sectionIndex){var authorErrors=worksCitedObject.getAuthorErrors();var titleSourceErrors=worksCitedObject.getTitleSourceErrors();var titleContainerErrors=worksCitedObject.getTitleContainerErrors();var contributorsErrors=worksCitedObject.getContributorsErrors();var versionErrors=worksCitedObject.getVersionErrors();var publisherErrors=worksCitedObject.getPublisherErrors();var publicationDateErrors=worksCitedObject.getPublicationDateErrors();var locationDateErrors=worksCitedObject.getLocationErrors();if(authorErrors===undefined||authorErrors.length<1){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getAuthorIndex(),\"Correct Author\",\"Correct Author format.\",0);}else{for(var _i7=0;_i7<authorErrors.length;_i7++){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getAuthorIndex(),\"Invalid Author\",authorErrors[_i7],0);}}if(titleSourceErrors===undefined||titleSourceErrors.length<1){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getTitleSourceIndex(),\"Correct Title Source\",\"Correct Title Source format.\",0);}else{for(var _i8=0;_i8<titleSourceErrors.length;_i8++){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getTitleSourceIndex(),\"Invalid Title Source\",titleSourceErrors[_i8]);}}if(titleContainerErrors===undefined||titleContainerErrors.length<1){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getTitleContainerIndex(),\"Correct Title Container\",\"Correct Title Container format.\",0);}else{for(var _i9=0;_i9<titleContainerErrors.length;_i9++){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getTitleContainerIndex(),\"Invalid Title Container\",titleContainerErrors[_i9],0);}}if(contributorsErrors===undefined||contributorsErrors.length<1){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getContributorsIndex(),\"Correct Contributors\",\"Correct Contributor format.\",0);}else{for(var _i10=0;_i10<contributorsErrors.length;_i10++){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getContributorsIndex(),\"Invalid Contributors\",contributorsErrors[_i10],0);}}if(versionErrors===undefined||versionErrors.length<1){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getVersionIndex(),\"Correct Version\",\"Correct Version format.\",0);}else{for(var _i11=0;_i11<versionErrors.length;_i11++){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getVersionIndex(),\"Invalid Version\",versionErrors[_i11],0);}}if(publisherErrors===undefined||publisherErrors.length<1){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getPublisherIndex(),\"Correct Publisher\",\"Correct Publisher format.\",0);}else{for(var _i12=0;_i12<publisherErrors.length;_i12++){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getPublisherIndex(),\"Invalid Publisher\",publisherErrors[_i12],0);}}if(publicationDateErrors===undefined||publicationDateErrors.length<1){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getPublicationDateIndex(),\"Correct Publication Date\",\"Correct Publicatoin Date format.\",0);}else{for(var _i13=0;_i13<publicationDateErrors.length;_i13++){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getPublicationDateIndex(),\"Invalid Publication Date\",publicationDateErrors[_i13],0);}}if(locationDateErrors===undefined||locationDateErrors.length<1){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getLocationIndex(),\"Correct Location\",\"Correct Location format.\",0);}else{for(var _i14=0;_i14<locationDateErrors.length;_i14++){commentsArray=insertCommentIntoArray(commentsArray,worksCitedObject.getLocationIndex(),\"Invalid Location\",locationDateErrors[_i14],0);}}}});sectionsArray.push(commentsArray);};for(var sectionIndex=0;sectionIndex<totalNumberOfSections;sectionIndex++){_loop3(sectionIndex);}return sectionsArray;}function checkMlaHandler(e){e.preventDefault();documentErrorList=[];citationsErrorList=[];dataEntriesList=[];worksCitedList=[];var includeCorrects=document.getElementById(\"includeCorrects\").checked;var includeSuggestions=document.getElementById(\"includeSuggestions\").checked;var includeInvalids=document.getElementById(\"includeInvalids\").checked;var responseImportant=document.getElementById(\"responseImportant\");responseImportant.innerHTML=\"\";var inputText=document.getElementById(\"inputText\").value;if(inputText.length>0){responseImportant.style.backgroundColor=\"#FF006A\";// responseImportant.style.color = \"#FFF\";\n}var inputSections=inputText.split(\"\\n\");if(inputSections.length<=1){if(inputSections[0].length>1){responseImportant.innerHTML=\"Make sure you've copied your whole paper before checking! \"+\"Include the following headers: Full Name, Teacher, Class Name, Today's Date.\";return;}responseImportant.innerHTML=\"Copy and paste your paper to start!\";return;}/* Parse the headers! */var hasExtraLinesInHeaders=false;var hasMissingHeaders=false;var startParsingIndex=0;var inputHeaders=[];for(var _i15=0;_i15<inputSections.length;_i15++){if(inputSections[_i15].length<1){hasExtraLinesInHeaders=true;inputSections.splice(_i15,1);_i15--;}else if(inputSections[_i15].length>15){hasMissingHeaders=true;break;}else{inputHeaders.push(inputSections[_i15]);}if(inputHeaders!==undefined&&inputHeaders.length===4){break;}}/* Input Headers handling!! */if(inputHeaders===undefined){responseImportant.innerHTML=\"his paper is empty\";return;}else if(inputHeaders.length<4){addDocumentError(\"Missing headers! Headers must include: your name, your teacher's name, class name, and current date.\",0,0);}if(hasExtraLinesInHeaders){addDocumentError(\"Consider removing the extra lines between headers of your document.\",0,0);}if(hasMissingHeaders){addDocumentError(\"Header/Title is missing! Headers must include: your name, your teacher's name, class name, and current date.\"+\"If your title is over 15 words long, shorten it and click the Check Citation button again.\",0,0);}/* Parse up until the Title! */var inputTitle;var hasExtraLinesBeforeTitle=false;for(var _i16=inputHeaders.length;_i16<inputSections.length;_i16++){if(inputSections[_i16].length<2){hasExtraLinesBeforeTitle=true;inputSections.splice(_i16,1);_i16--;}else{inputTitle=inputSections[_i16];startParsingIndex=_i16+1;break;}}/* Title Handling */if(inputTitle===undefined){responseImportant.innerHTML=\"Please add more to your paper before checking!\";return;}if(inputSections[startParsingIndex].length<2||hasExtraLinesBeforeTitle){addDocumentError(\"Consider removing the extra lines before and after the Title of your document.\",startParsingIndex-1,0);}/* Parse the extra lines after the Title! We don't want to use them :) */for(var _i17=startParsingIndex;_i17<inputSections.length;_i17++){if(inputSections[_i17].length<2){inputSections.splice(_i17,1);_i17--;}}/* Removing any extra lines in the document.*/startOfPaperIndex=undefined;for(var _i18=0;_i18<inputSections.length;_i18++){if(inputSections[_i18].length<2){inputSections.splice(_i18,1);_i18--;}else if(startOfPaperIndex===undefined&&inputSections[_i18].split(\" \").length>20){startOfPaperIndex=_i18;break;}}if(startOfPaperIndex===undefined){responseImportant.innerHTML=\"Please add more to your paper before checking!\";return;}sectionWorksCited=undefined;/* Give the section works cited the last section so the loop can work. */for(var _i19=startParsingIndex;_i19<inputSections.length;_i19++){var text=inputSections[_i19].trim().split(\" \");if(text.length===2){text=text.join(\" \").toLowerCase();if(text===\"works cited\"||text===\"references\"||text===\"bibliography\"){sectionWorksCited=_i19;}}}if(sectionWorksCited===undefined){sectionWorksCited=inputSections.length;responseImportant.innerHTML=\"Please include a works cited page at the end of your document. If your works cited page exists,\"+\" make sure to have a single line named 'Works Cited' before the citations\";return;}/* Check for MLA Works Cited page and parse the works cited citations!*/var hasWorksCitedCitations=false;if(sectionWorksCited<inputSections.length){hasWorksCitedCitations=findMlaWorksCited(sectionWorksCited+1,inputSections,inputSections.length);}if(!hasWorksCitedCitations){responseImportant.innerHTML=\"Add your source citations under your 'Works Cited' section at the end of the document.\";return;}// console.log(inputSections);\n// console.log(startOfPaperIndex, sectionWorksCited);\n/* Now find the in-text quotes/citations inside the paper sections!*/findMlaQuotes(startOfPaperIndex,inputSections,sectionWorksCited);/* Check that citations alone are valid */ // console.log(dataEntriesList);\n// console.log(citationsErrorList);\n// console.log(worksCitedList);\n// console.log(documentErrorList);\nvar sectionArrayObject=createSectionsArray(inputSections.length);// console.log(sectionArrayObject);\ngenerateResultPaper(sectionArrayObject,inputSections,includeCorrects,includeSuggestions,includeInvalids);console.log(\"\\nEND\\n\\n\");responseImportant.innerHTML=\"See results below\";responseImportant.style.backgroundColor=\"#3CD604\";}function generateResultPaper(sectionArrayObject,inputSections,includeCorrects,includeSuggestions,includeInvalids){/* Creating container for parent node */var parent=document.getElementById(\"bottom-parent\");parent.innerHTML='';// Clear previous results!\nvar resultsContainer=document.createElement(\"div\");resultsContainer.classList.add(\"container-other\");/* Creating side comment column nodes */ // const leftColumnNode = document.createElement(\"div\");\n// leftColumnNode.classList.add(\"container-other\");\n// leftColumnNode.classList.add(\"left-column\");\nvar rightColumnNode=document.createElement(\"div\");// rightColumnNode.classList.add(\"container-other\");\nrightColumnNode.classList.add(\"right-column\");/* Creating results container so text nodes can be appended inside of the container */var resultTitle=document.createElement(\"h1\");var resultTitleText=document.createTextNode(\"Results\");resultTitle.appendChild(resultTitleText);resultsContainer.appendChild(resultTitle);var commentNumber=1;/* Start creating the paper! parent -> resultsContainer -> text */for(var secIndex=0;secIndex<inputSections.length;secIndex++){var wordsInSection=inputSections[secIndex].split(\" \");var sectionNode=document.createElement(\"p\");var sectionArrayComments=sectionArrayObject[secIndex];var commentNumOfItems=sectionArrayComments.length;if(secIndex>=startOfPaperIndex&&secIndex<sectionWorksCited){// To tab paragraphs!\nvar tabNode=document.createTextNode(\"\\xA0\\xA0\\xA0\\xA0\");sectionNode.appendChild(tabNode);}var commentWordLength=0;var commentSpanNode=void 0;var hasCommentHighlight=false;for(var _i20=0;_i20<wordsInSection.length;_i20++){var word=wordsInSection[_i20];// const spanNode = document.createElement(\"span\");\nvar wordNode=document.createTextNode(word);for(var commentIndex=0;commentIndex<commentNumOfItems;commentIndex+=4){if(_i20===sectionArrayComments[commentIndex]){// console.log(secIndex + \" \" + sectionArrayComments[commentIndex]);\nvar commentType=sectionArrayComments[commentIndex+1];var commentTypeLower=commentType.toLowerCase();/* Checking whether or not to post based on user input checkboxes. */if(!includeCorrects&&commentTypeLower.includes(\"correct\")){continue;}if(!includeSuggestions&&commentTypeLower.includes(\"suggestion\")){continue;}if(!includeInvalids&&commentTypeLower.includes(\"invalids\")){continue;}/** Determines how to highlight the text in the paper*/if(commentWordLength===0&&!hasCommentHighlight){hasCommentHighlight=true;commentWordLength=sectionArrayComments[commentIndex+3];commentSpanNode=document.createElement(\"span\");if(commentTypeLower.includes(\"error\")||commentTypeLower.includes(\"invalid\")){commentSpanNode.classList.add(\"red-color\");}else if(commentTypeLower.includes(\"correct\")){commentSpanNode.classList.add(\"green-color\");}else if(commentTypeLower.includes(\"suggestion\")){commentSpanNode.classList.add(\"yellow-color\");}}var commentNumberNode=document.createTextNode(commentNumber);var numberElement=document.createElement(\"span\");if(commentTypeLower.includes(\"error\")||commentTypeLower.includes(\"invalid\")){numberElement.classList.add(\"red-number\");}else if(commentTypeLower.includes(\"correct\")){numberElement.classList.add(\"green-number\");}else if(commentTypeLower.includes(\"suggestion\")){numberElement.classList.add(\"yellow-number\");}numberElement.appendChild(commentNumberNode);sectionNode.appendChild(numberElement);var spaceNode3=document.createTextNode(\" \");sectionNode.appendChild(spaceNode3);/** USE #2\n            * Create this or the textnodes/nodes from above will be placed over the nodes below in the Paper! \n            */var containerHeader=document.createElement(\"div\");containerHeader.classList.add(\"side-container-header\");/* Determining the underline container color! */var headerUnderline=document.createElement(\"span\");headerUnderline.classList.add(\"under-line\");if(commentTypeLower.includes(\"error\")||commentTypeLower.includes(\"invalid\")){headerUnderline.classList.add(\"red-line\");}else if(commentTypeLower.includes(\"correct\")){headerUnderline.classList.add(\"green-line\");}else if(commentTypeLower.includes(\"suggestion\")){headerUnderline.classList.add(\"yellow-line\");}/* Determining number to place in the header container!*/var commentNumberNode2=document.createTextNode(commentNumber);var numberElement2=document.createElement(\"span\");if(commentTypeLower.includes(\"error\")||commentTypeLower.includes(\"invalid\")){numberElement2.classList.add(\"red-number\");}else if(commentTypeLower.includes(\"correct\")){numberElement2.classList.add(\"green-number\");}else if(commentTypeLower.includes(\"suggestion\")){numberElement2.classList.add(\"yellow-number\");}numberElement2.appendChild(commentNumberNode2);/* Comment Type Node */var commentTypeTextNode=document.createTextNode(commentType);var commentTypeElement=document.createElement(\"h2\");commentTypeElement.append(commentTypeTextNode);/* Comment Message Node */var commentMessageText=sectionArrayComments[commentIndex+2];var commentMessageTextNode=document.createTextNode(commentMessageText);var commentMessageNode=document.createElement(\"p\");commentMessageNode.appendChild(commentMessageTextNode);/* Comment Container Node */var commentContainerNode=document.createElement(\"div\");commentContainerNode.classList.add(\"side-container\");/** Append comment number and type Comment Header div.\n            * Then append Comment Header div to Comment Container div.\n            */containerHeader.appendChild(numberElement2);containerHeader.appendChild(commentTypeElement);commentContainerNode.appendChild(containerHeader);commentContainerNode.appendChild(headerUnderline);commentContainerNode.appendChild(commentMessageNode);/* If comment number is even, append it to right side. Else, left side.*/ // if (commentNumber % 2 === 0) {\n//   rightColumnNode.appendChild(commentContainerNode);\n// } else {\n//   leftColumnNode.appendChild(commentContainerNode);\n// }\nrightColumnNode.appendChild(commentContainerNode);commentNumber+=1;}}/* If there is a comment associated with the word, make sure the word is added to a highlighted span */if(commentWordLength>0){commentWordLength-=1;commentSpanNode.appendChild(wordNode);var spaceNode2=document.createTextNode(\" \");commentSpanNode.appendChild(spaceNode2);/* If this is the last word in the highlight. */if(commentWordLength===0){hasCommentHighlight=false;sectionNode.appendChild(commentSpanNode);}}else{// Else, just add it to the section node\nsectionNode.appendChild(wordNode);var spaceNode=document.createTextNode(\" \");sectionNode.appendChild(spaceNode);}}resultsContainer.append(sectionNode);}/* Add the results container at the end! */ // parent.appendChild(leftColumnNode);\nparent.appendChild(resultsContainer);parent.appendChild(rightColumnNode);}function checkApaHandler(e){e.preventDefault();}return/*#__PURE__*/_jsxs(\"div\",{id:\"parent\",className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"header\",className:\"header\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Essay Format Checker\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"inputForm\",autoComplete:\"off\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"textarea\",{onChange:inputTextOnChange,onBlur:inputTextChangeOnBlur,onFocus:inputTextChangeOnFocus,id:\"inputText\",type:\"text\",required:true}),/*#__PURE__*/_jsx(\"label\",{id:\"responseImportant\",children:\"Copy and paste your text here\"}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"importantButtons\",children:[selectedFormat===\"MLA\"?/*#__PURE__*/_jsx(\"button\",{onClick:checkMlaHandler,type:\"submit\",value:\"Check Paper\",className:\"btn btn-check\",children:\"Check for MLA format\"}):/*#__PURE__*/_jsx(\"button\",{onClick:checkApaHandler,type:\"submit\",value:\"Check Paper\",className:\"btn btn-check\",children:\"Check for APA format\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:selectedFormatHandler,id:\"selectedFormat\",name:\"inputFormat\",className:\"btn btn-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"MLA\",children:\"MLA\"}),/*#__PURE__*/_jsx(\"option\",{value:\"APA\",children:\"APA\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"includeCorrects\",value:\"includeCorrects\"}),/*#__PURE__*/_jsx(\"label\",{for:\"includeCorrects\",children:\"Correct Formatting\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"includeSuggestions\",value:\"includeSuggestions\"}),/*#__PURE__*/_jsx(\"label\",{for:\"includeSuggestions\",children:\"Suggestions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"includeInvalids\",value:\"includeInvalids\"}),/*#__PURE__*/_jsx(\"label\",{for:\"includeInvalids\",children:\"Invalid Formatting\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:clearTextArea,type:\"submit\",value:\"Clear\",className:\"btn btn-clear\",children:\"Clear Text\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"bottom-parent\",className:\"bottom-parent\"})]});}export default App;","map":{"version":3,"names":["Quote","CitationError","DocumentError","MLAWorksCitation","useState","App","documentErrorList","dataEntriesList","citationsErrorList","worksCitedList","startOfPaperIndex","sectionWorksCited","selectedFormat","setSelectedFormat","firstDoubleQuote_CharValues","lastDoubleQuote_CharValues","selectedFormatHandler","e","preventDefault","value","document","getElementById","inputTextOnChange","responseImportant","innerHTML","style","backgroundColor","inputTextChangeOnBlur","inputText","length","inputTextChangeOnFocus","clearTextArea","stripQuotations","quote","includes","charCodeAt","substring","replace","addToCitationErrorList","citation","secIndex","index","errorMessage","citationObject","i","citationToCheck","getCitation","getCitationObject","citationErrors","getCitationErrors","undefined","push","setCitationErrors","setCitationIndex","setCitationSection","addCitationError","quoteObject","quoteToCheck","getQuote","getQuoteObject","console","log","addCitation","citationStr","setCitation","setCitationError","citationHasErrors","splice","addQuote","quoteErrors","getQuoteErrors","setQuoteErrors","setQuoteIndex","setQuoteSection","addQuoteError","unshift","addDocumentError","documentErrorObject","removeMlaDecimal","word","chars","split","result","slice","capitalizeFirstLetter","charAt","toUpperCase","validateCitationInText","wordsInSection","sentences","join","match","sentencesWithQuotationCitation","sentenceIndex","sentence","hasBeginningQuoteInSentence","hasEndingQuoteInSentence","character","findMlaBlockCitation","startedCitationIndex","findMlaCitations","finalWord","findMlaQuotes","startingIndex","inputSections","currentSection","containsQuoteInSection","containsCitationInSection","hasQuoteErrorInSection","containsQuote","wordsInQuote","wordsinSectionLength","quoteIndex","containsFinalQuote","pop","containsCitation","citationIndex","citationIndexFound","citationRightAfterQuote","citationValid","forEach","error","findMlaWorksCited","totalNumberSections","mlaWorksCitedObj","authorSentence","trim","authorNames","authorErrors","setAuthorIndex","setAuthor","lastNames","firstNames","fullname","toLowerCase","authorAcronym","setAuthorAcronym","errors","getAuthorErrors","setAuthorErrors","insertCommentIntoArray","array","commentType","comment","wordLength","indexToCheck","createSectionsArray","totalNumberOfSections","sectionsArray","sectionIndex","commentsArray","documentErrorObj","getSection","getError","errorMessageLower","errorType","getIndex","getQuoteSection","quoteWordLength","getQuoteIndex","errorMesssageLower","messageType","getCitationSection","citationWordLength","getCitationIndex","citationError","worksCitedObject","getSectionIndex","titleSourceErrors","getTitleSourceErrors","titleContainerErrors","getTitleContainerErrors","contributorsErrors","getContributorsErrors","versionErrors","getVersionErrors","publisherErrors","getPublisherErrors","publicationDateErrors","getPublicationDateErrors","locationDateErrors","getLocationErrors","getAuthorIndex","getTitleSourceIndex","getTitleContainerIndex","getContributorsIndex","getVersionIndex","getPublisherIndex","getPublicationDateIndex","getLocationIndex","checkMlaHandler","includeCorrects","checked","includeSuggestions","includeInvalids","hasExtraLinesInHeaders","hasMissingHeaders","startParsingIndex","inputHeaders","inputTitle","hasExtraLinesBeforeTitle","text","hasWorksCitedCitations","sectionArrayObject","generateResultPaper","parent","resultsContainer","createElement","classList","add","rightColumnNode","resultTitle","resultTitleText","createTextNode","appendChild","commentNumber","sectionNode","sectionArrayComments","commentNumOfItems","tabNode","commentWordLength","commentSpanNode","hasCommentHighlight","wordNode","commentIndex","commentTypeLower","commentNumberNode","numberElement","spaceNode3","containerHeader","headerUnderline","commentNumberNode2","numberElement2","commentTypeTextNode","commentTypeElement","append","commentMessageText","commentMessageTextNode","commentMessageNode","commentContainerNode","spaceNode2","spaceNode","checkApaHandler"],"sources":["/usr/share/caddy/personal/formatter/src/App.js"],"sourcesContent":["import './App.css';\nimport {Quote} from './models/Quote.js';\nimport {CitationError} from './models/CitationError.js';\nimport {DocumentError} from './models/DocumentError.js';\nimport {MLAWorksCitation} from './models/MLAWorksCitation.js';\nimport {useState} from 'react';\n\nfunction App() {\n  \n  let documentErrorList;\n  let dataEntriesList;\n  let citationsErrorList;\n  let worksCitedList;\n  let startOfPaperIndex;\n  let sectionWorksCited;\n  const [selectedFormat, setSelectedFormat] = useState(\"MLA\");\n  \n  const firstDoubleQuote_CharValues = [8220, 34];\n  const lastDoubleQuote_CharValues = [8221, 34];\n  // 33: !    46: .    59: ;    63: ?\n  \n  // Need Valid MLA inline-citation\n  \n  function selectedFormatHandler(e) {\n    e.preventDefault();\n    \n    let value = document.getElementById(\"selectedFormat\").value;\n    \n    if (value !== selectedFormat) {\n      if (selectedFormat === \"MLA\") {\n        setSelectedFormat(\"APA\");\n      } else {\n        setSelectedFormat(\"MLA\");\n      }\n    }\n  }\n  \n  function inputTextOnChange(e) {\n    e.preventDefault();\n    \n    const responseImportant = document.getElementById(\"responseImportant\");\n    if (responseImportant.innerHTML === \"Copy and paste your text here\") {\n      responseImportant.innerHTML = \"Click Check Paper!\";\n      responseImportant.style.backgroundColor = \"#ff006a\";\n    }\n  }\n  \n  function inputTextChangeOnBlur(e) {\n    e.preventDefault();\n    \n    let inputText = document.getElementById(\"inputText\").value;\n    \n    if (inputText.length === 0) {\n      const responseImportant = document.getElementById(\"responseImportant\");\n      responseImportant.innerHTML = \"Copy and paste your text here\";\n      responseImportant.style.backgroundColor = \"transparent\";\n    }\n  }\n  \n  function inputTextChangeOnFocus(e) {\n    e.preventDefault();\n    \n    const responseImportant = document.getElementById(\"responseImportant\");\n    if (responseImportant.innerHTML !== \"See results below\") {\n      responseImportant.style.backgroundColor = \"#ff006a\";\n    }\n  }\n  \n  function clearTextArea(e) {\n    e.preventDefault();\n    \n    document.getElementById(\"inputText\").value = \"\";\n    const responseImportant = document.getElementById(\"responseImportant\");\n    responseImportant.innerHTML = \"Copy and paste your text here\";\n    responseImportant.style.backgroundColor = \"transparent\";\n  }\n  \n  function stripQuotations(quote) {\n    if (firstDoubleQuote_CharValues.includes(quote.charCodeAt(0))) {\n      quote = quote.substring(1);\n    }\n    if (lastDoubleQuote_CharValues.includes(quote.charCodeAt(quote.length -1))) {\n      quote = quote.substring(0, (quote.length -1));\n    }\n    quote.replace(\"\\\"\", \"\");\n    \n    return quote;\n  }\n  \n  function addToCitationErrorList(citation, secIndex, index, errorMessage) {\n    let citationObject;\n    \n    for (let i = 0; i < citationsErrorList.length; i++) {\n      let citationToCheck = citationsErrorList[i].getCitation();\n      \n      if (citation === citationToCheck) {\n        citationObject = getCitationObject(citation);\n        let citationErrors = citationObject.getCitationErrors();\n        \n        if (citationErrors === undefined) {\n          citationErrors = [];\n        }\n        \n        citationErrors.push(\"This citation already exists.\");\n        citationObject.setCitationErrors(citationErrors);\n        break;\n      }\n    }\n  \n    if (citationObject === undefined) {\n      citationObject = new CitationError(citation);\n      let citationErrors = [errorMessage];\n      citationObject.setCitationErrors(citationErrors);\n      citationObject.setCitationIndex(index);\n      citationObject.setCitationSection(secIndex);\n    }\n    \n    citationsErrorList.push(citationObject);\n  }\n  \n  function addCitationError(quote, citation, secIndex, index, errorMessage) {\n    quote = stripQuotations(quote);\n    let quoteObject;\n    \n    /* If this is a citation for a quote */\n    for (let i = 0; i < dataEntriesList.length; i++) {\n      let quoteToCheck = dataEntriesList[i].getQuote();\n      \n      if (quote === quoteToCheck) {\n        quoteObject = getQuoteObject(quote);\n        let citationToCheck = quoteObject.getCitation();\n        let citationErrors = quoteObject.getCitationErrors();\n        \n        if (citationErrors === undefined) {\n          citationErrors = [];\n        }\n        \n        if (citation === citationToCheck) {\n          citationErrors.push(\"This citation already exists for given quote.\");\n          // What about errorMessage here?\n          \n        } else {\n          citationErrors.push(errorMessage);\n          \n        }\n        \n        quoteObject.setCitationErrors(errorMessage);\n        dataEntriesList.push(quoteObject);\n        return;\n      }\n    }\n    \n    if (quoteObject === undefined) {\n      console.log(\"Could not add citation error to quotes list.\");\n    }\n    \n  }\n  \n  /* For now, there should only be one quote per citation! This will flip some time soon*/\n  function addCitation(quote, citation, secIndex, index) {\n    quote = stripQuotations(quote);\n    let quoteObject = undefined;\n    \n    for (let i = 0; i < dataEntriesList.length; i++) {\n      let quoteToCheck = dataEntriesList[i].getQuote();\n      \n      if (quote === quoteToCheck) {\n        quoteObject = getQuoteObject(quote);\n        let citationStr = quoteObject.getCitation();\n        \n        if (citationStr === undefined) {\n          quoteObject.setCitation(citation);\n          quoteObject.setCitationIndex(index);\n          quoteObject.setCitationSection(secIndex);\n          \n        } else {\n          quoteObject.setCitationError(\"This Citation exists at least twice for the quote in this paper.\");\n          addCitationError(quote, citation, secIndex, index);\n        }\n        \n        dataEntriesList.push(quoteObject);\n        break;\n      }\n    }\n    \n    if (quoteObject === undefined) { // If quote does not exists with given citation.\n      let citationHasErrors = false;\n      \n      for (let i = 0; i < citationsErrorList.length; i++) { // Checking to see if has errors\n        let citationToCheck = citationsErrorList[i].getCitation();\n        \n        if (citation === citationToCheck) {\n          citationHasErrors = true;\n          let citationObject = getCitationObject(citation);\n          console.log(citationObject);\n          let citationErrors = citationObject.getCitationErrors();\n          \n          if (citationErrors === undefined) {\n            citationErrors = [];\n          }\n          citationErrors.push(\"This citation is not associated with any quote/block quote.\");\n          citationObject.setCitationErrors(citationErrors);\n          citationsErrorList.push(citationObject);\n          break;\n        }\n      }\n      \n      if (!citationHasErrors) {\n        let citationObject = new CitationError(citation);\n        citationsErrorList.push(citationObject);\n      }\n    }\n    \n  }\n  \n  function getCitationObject(citation) {\n    let citationObject;\n    \n    for (let i = 0; i < citationsErrorList.length; i++) {\n      let citationToCheck = citationsErrorList[i].getCitation();\n      \n      if (citation === citationToCheck) {\n        citationObject = citationsErrorList.splice(i, 1);\n        citationObject = citationObject[0];\n        break;\n      }\n    }\n    return citationObject;\n  }\n  \n  function getQuoteObject(quote) {\n    quote = stripQuotations(quote);\n    let quoteObject;\n    \n    for (let i = 0; i < dataEntriesList.length; i++) {\n      let quoteToCheck = dataEntriesList[i].getQuote();\n      \n      if (quote === quoteToCheck) {\n        quoteObject = dataEntriesList.splice(i, 1); //Removes the quoteObj from list.\n        quoteObject = quoteObject[0];\n        \n        break;\n      }\n    }\n    return quoteObject;\n  }\n  \n  function addQuote(quote, secIndex, index) {\n    quote = stripQuotations(quote);\n    let quoteObject;\n    \n    for (let i = 0; i < dataEntriesList.length; i++) {\n      let quoteToCheck = dataEntriesList[i].getQuote();\n      \n      if (quote === quoteToCheck) {\n        quoteObject = getQuoteObject(quote);\n        let quoteErrors = quoteObject.getQuoteErrors();\n        \n        if (quoteErrors === undefined) {\n          quoteErrors = [];\n        }\n        \n        quoteErrors.push(\"This quote already exists in this document\");\n        quoteObject.setQuoteErrors(quoteErrors);\n        break;\n      }\n    }\n    \n    if (quoteObject === undefined) {\n      quoteObject = new Quote(quote);\n      let quoteErrors = [];\n      \n      quoteObject.setQuoteErrors(quoteErrors);\n      quoteObject.setQuoteIndex(index);\n      quoteObject.setQuoteSection(secIndex);\n    }\n    \n    dataEntriesList.push(quoteObject);\n  }\n  \n  function addQuoteError(quote, errorMessage) {\n    quote = stripQuotations(quote);\n    \n    let quoteObject = getQuoteObject(quote);\n    \n    if (quoteObject === undefined) {\n      console.log(\"SYSTEM ERROR: Cannot add error to a quote that does not exist\");\n      return undefined;\n    }\n    \n    let quoteErrors = quoteObject.getQuoteErrors();\n    if (quoteErrors === undefined) {\n      quoteErrors = [];\n    }\n    \n    quoteErrors.push(errorMessage);\n    quoteObject.setQuoteErrors(quoteErrors);\n    \n    dataEntriesList.unshift(quoteObject);\n  }\n  \n  function addDocumentError(errorMessage, secIndex, index) {\n    let documentErrorObject = new DocumentError(errorMessage, secIndex, index);\n    documentErrorList.push(documentErrorObject);\n  }\n  \n  function removeMlaDecimal(word) {\n    const chars = word.split('');\n    if (chars[(word.length-1)] === '.') { // If the last character is a decimal, remove it!\n      const result = word.slice(0, -1);\n      return result;\n    } else {\n      return word;\n    }\n  }\n  \n  function capitalizeFirstLetter(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }\n  \n  /** This should check that an author's name appears in here! Author must come from Works Cited list*/\n  function validateCitationInText(wordsInSection, citation) {\n    // DO NOT disable the comment below...\n    // eslint-disable-next-line\n    let sentences = wordsInSection.join(\" \").match( /[^\\.!\\?]+[\\.!\\?]+/g );\n    \n    let sentencesWithQuotationCitation = [];\n    // console.log(\"Citation to check: \" +citation);\n    \n    for (let sentenceIndex = 0; sentenceIndex < wordsInSection.length; sentenceIndex++) {\n      let sentence = sentences[sentenceIndex];\n      let hasBeginningQuoteInSentence = false;\n      let hasEndingQuoteInSentence = false;\n      \n      if (sentence === undefined) {\n        continue;\n      }\n      \n      for (let i = 0; i < sentence.length; i++) {\n        let character = sentence[i];\n        \n        if (!hasBeginningQuoteInSentence && firstDoubleQuote_CharValues.includes(character.charCodeAt(0))) {\n          hasBeginningQuoteInSentence = true;\n          \n        } else if (!hasEndingQuoteInSentence && lastDoubleQuote_CharValues.includes(character.charCodeAt(0))) {\n          hasEndingQuoteInSentence = true;\n          // console.log(\"Sentence: \"+sentence);\n          break;\n          \n        }\n        \n      }\n      \n      if (hasBeginningQuoteInSentence) {\n        sentencesWithQuotationCitation.push(sentence);\n        // console.log(\"Has beginning quote! \" +sentencesWithQuotationCitation.join(\" \"));\n        // console.log(sentencesWithQuotationCitation.join(\" \").includes(citation));\n      \n        if (hasEndingQuoteInSentence) { // IF IT HAS ENDING QUOTATION MARKS, THE CITATION MUST EXIST AFTER QUOTE!\n          // console.log(\"Quote found! \" +sentencesWithQuotationCitation.join(\" \"));\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  \n  function findMlaBlockCitation(wordsInSection, secIndex) {\n    \n    if (wordsInSection.join(\" \").includes(\")\") && wordsInSection.join(\" \").includes(\"(\")) { // Checks if the section contains a parenthesis. Possible block citation!\n      console.log(wordsInSection);\n      let citation = [];\n      let quote = [];\n      let i = 0;\n      let startedCitationIndex = 0;\n    \n      while (true) {\n        let word = wordsInSection[i];\n        \n        citation = findMlaCitations(word, startedCitationIndex, i, citation);\n        \n        if (citation[0].includes(\")\") && citation[0].includes(\"(\")) { // If citation was found\n          addQuote(quote.join(\" \"), secIndex, 0);\n          addCitation(quote.join(\" \"), citation.join(\" \"), secIndex, i);\n          return true;\n          \n        } else if (!citation[0].includes(\"(\")) {\n          quote.push(word);\n        } else if (citation[0].includes(\"(\")) {\n          citation.push(word);\n        }\n        \n        i++;\n      }\n    }\n    return false;\n  }\n  \n  function findMlaCitations(word, startedCitationIndex, i, citation) {\n    \n    if (!word.includes(\"(\") && (citation === undefined)) { // If beginning of citation and doesn't include open parenthesis.\n      console.log(\"Citation does not come right after quote! WHOOPS\");\n      return [];\n      \n    } else if (word.includes(\"(\") && (startedCitationIndex === i)) { // If citation is right after quote.\n      \n      if (word.includes(\")\")) { // If word is also end of citation too.\n        const finalWord = removeMlaDecimal(word);\n        citation.push(finalWord);\n        return [citation.join(\" \")];\n      }\n      citation.push(word);\n      \n    } else if (word.includes(\")\")) { // If this is the end of the citation.\n      const finalWord = removeMlaDecimal(word);\n      citation.push(finalWord);\n      return [citation.join(\" \")];\n      \n    } else {\n      citation.push(word);\n    }\n    \n    return [citation.join(\" \")];\n  }\n  \n  /**\n   * Finds all of the quotes in MLA Format and adds them to the Quotes List! \n   */\n  function findMlaQuotes(startingIndex, inputSections, sectionWorksCited) {\n    \n    for (let secIndex = startingIndex; secIndex < sectionWorksCited; secIndex++) {\n      let currentSection = inputSections[secIndex].replace('\\t', \"\");\n      const wordsInSection = currentSection.split(\" \");\n      \n      if (wordsInSection.length < 2) { // We don't want empty sections!\n        continue;\n      }\n      \n      let containsQuoteInSection = false;\n      let containsCitationInSection = false;\n      let hasQuoteErrorInSection = false;\n      \n      /* Time to find the quotes in a section*/\n      for (let i = 0; i < wordsInSection.length; i++) {\n        let word = wordsInSection[i];\n        \n        let containsQuote = false;\n        let quote;\n        let quoteErrors = [];\n        let citationErrors = [];\n        \n        if (firstDoubleQuote_CharValues.includes(word.charCodeAt(0))) { // First quoted word found, now find the last.\n          let wordsInQuote = [];\n          wordsInQuote.push(word);\n          let wordsinSectionLength = wordsInSection.length -1;\n          let quoteIndex = i;\n          \n          while (true) { // Checking word with ending quotation marks!\n            i++;\n            word = wordsInSection[i];\n            \n            word = removeMlaDecimal(word);\n            \n            const containsFinalQuote = (lastDoubleQuote_CharValues.includes(word.charCodeAt(word.length -1)));\n            wordsInQuote.push(word);\n            \n            if (containsFinalQuote) {\n              containsQuoteInSection = true;\n              containsQuote = true;\n              break;\n            } else if (word.includes(\"(\")) { // If a citation comes before an ending parenthesis, tell the user.\n              quoteErrors.push(\"Missing ending parenthesis. Is it possible that you missed one before the citation?\");\n              wordsInQuote.pop();\n              hasQuoteErrorInSection = true;\n              containsQuote = true;\n              break;\n            } else if (i === wordsinSectionLength) { // If this is the last word in the section and doesn't contain any quotes, tell the user.\n              quoteErrors.push(\"Missing ending quotation marks!\");\n              hasQuoteErrorInSection = true;\n              containsQuote = true;\n              break;\n            }\n          }\n          \n          quote = wordsInQuote.join(\" \");\n          \n          let startedCitationIndex = i+1;\n          let containsCitation = false;\n          let citation = [];\n          let citationIndex = 0;\n          let citationIndexFound = false;\n          let citationRightAfterQuote = true;\n          \n          // Get the citing of the quote after the quotation marks.\n          while (true) {\n            i++;\n            if (wordsInSection.length === i) {\n              break;\n            }\n            word = wordsInSection[i];\n            \n            \n            if (firstDoubleQuote_CharValues.includes(word.charCodeAt(0))) { // Could mean that this quote could be associated with the next quote?\n              i--;\n              break;\n            }\n            \n            citation = findMlaCitations(word, startedCitationIndex, i, citation);\n            \n            /* If citation hasn't been found yet, give it the index now that it's found!*/\n            if (!citationIndexFound && citation[0].includes(\"(\")) {\n              citationIndexFound = true;\n              citationIndex = i;\n              \n              if (citation[0].includes(\")\")) { // If this citation is also the last one, break!\n                containsCitationInSection = true;\n                containsCitation = true;\n                break;\n              }\n              \n              continue;\n            }\n            \n            if (citation[0].includes(\")\") && citation[0].includes(\"(\")) { // If citation was found\n              containsCitationInSection = true;\n              containsCitation = true;\n              break;\n            }\n            \n            /* If the citation index isn't found yet and it's not the last word in the section, continue to next iteration*/\n            if (containsQuote && !citationIndexFound && (i !== wordsInSection.length -1)) {\n              citationRightAfterQuote = false;\n              citation.splice(0, citation.length);\n              continue;\n            }\n          }\n          \n          if (containsCitation) {\n            citation = citation.join(\" \");\n          }\n          \n          /* If there's a quote where the citation doesn't come right after. Suggestion! */\n          if (!citationRightAfterQuote && containsQuote) {\n            citationErrors.push(\"Suggestion: Add citation directly after the quote.\");\n          }\n          \n          /* If there's a citation and a quote! */\n          if (containsCitation && containsQuote) {\n            \n            addQuote(quote, secIndex, quoteIndex);\n            addCitation(quote, citation, secIndex, citationIndex);\n            \n            // Validate citation\n            let citationValid = validateCitationInText(wordsInSection, citation);\n            if (!citationValid) {\n              \n            }\n            \n          } else if (containsCitation && !containsQuote) { // If there's only a citation\n            addToCitationErrorList(citation, secIndex, citationIndex, \"No quote exists for the given citation\");\n            \n          } else if (!containsCitation && containsQuote) { // If there's only a quote\n            // Could be a quote from different paragraph? Idk...\n            console.log(citation);\n            addQuote(quote, secIndex, quoteIndex);\n            // let quoteLength = quote.length;\n            // addCitationError(quote, )\n            addQuoteError(quote, \"This quote does not have an in-text citation\");\n          }\n          \n          if (containsQuote && quoteErrors !== undefined) {\n            quoteErrors.forEach(error => {\n              addQuoteError(quote, error);\n            });\n          }\n          \n          if (containsCitation && citationErrors !== undefined) {\n            citationErrors.forEach(error => {\n              addToCitationErrorList(citation, secIndex, citationIndex, error);\n            });\n          }\n          \n          //Repeat for multiple quotes/citations in paragraph.\n        }\n      }\n    \n      if (!containsQuoteInSection && !hasQuoteErrorInSection) { // If the section does not contain a quote in section or quote errors. Could it be a block citation?\n        containsCitationInSection = findMlaBlockCitation(wordsInSection, secIndex);\n      }\n      \n      if (containsQuoteInSection && !containsCitationInSection) { // This could possibly be a single cited paper!\n        \n      }\n      \n      if (!containsCitationInSection && !containsQuoteInSection) {\n        addDocumentError(\"No quote or citation exists for this paragraph!\", secIndex, 0);\n      }\n    }\n  }\n  \n  /**\n  * Author, Title of source, Title of container, Other contributors\n  * Version, Number, Publisher, Publication date, Location.\n  */\n  function findMlaWorksCited(sectionWorksCited, inputSections, totalNumberSections) {\n    \n    for (let secIndex = sectionWorksCited; secIndex < totalNumberSections; secIndex++) {\n      let mlaWorksCitedObj = new MLAWorksCitation(inputSections[secIndex], secIndex);\n      // DO NOT disable the comment below...\n      // eslint-disable-next-line\n      let sentences = inputSections[secIndex].match( /[^\\.!\\?]+[\\.!\\?]+/g );\n      // for (let sentIndex = 0; sentIndex < sentences.length)\n      let sentenceIndex = 0;\n      \n      if (sentences === null) { // This is null instead of undefined because of the funky .match() function above.\n        addDocumentError(\"Add your works citations at the end of the paper under the Works Cited section!\", secIndex, 0);\n        return;\n      }\n      \n      /* Find Author and Author Acronym! */\n      let authorSentence = sentences[sentenceIndex].trim();\n      authorSentence = authorSentence.replace('.', \"\");\n      \n      // console.log(authorSentence);\n      // console.log(secIndex);\n      // if (authorSentence)\n      let authorNames = authorSentence.split(\",\");\n      let authorErrors = [];\n      \n      if (authorNames === undefined) {\n        addDocumentError(\"Add your works citations at the end of the paper under the Works Cited section!\", secIndex, 0);\n        return;\n      }\n      \n      mlaWorksCitedObj.setAuthorIndex(sentenceIndex);\n      \n      // console.log(authorNames);\n      if (authorNames.length === 1) {\n        mlaWorksCitedObj.setAuthor(authorNames[0]);\n        authorErrors.push(\"Author name must include first and last name in the following format\" +\n        \" 'Last Name, First Name (Optional: Middle Initial/Name).'\");\n      } else if (authorNames.length > 2) {\n        mlaWorksCitedObj.setAuthor(authorSentence);\n        authorErrors.push(\"Make sure to use the following format for the Author's name:\" +\n        \" 'Last Name, First Name (Optional: Middle Initial/Name).'\");\n      } else {\n        let lastNames = authorNames[0].trim().split(\" \");\n        let firstNames = authorNames[1].trim().split(\" \");\n        let fullname = [];\n        \n        firstNames.forEach(word => {\n          fullname.push(capitalizeFirstLetter(word.toLowerCase()));\n        });\n        lastNames.forEach(word => {\n          fullname.push(capitalizeFirstLetter(word.toLowerCase()));\n        });\n        \n        mlaWorksCitedObj.setAuthor(fullname.join(\" \"));\n        \n        let authorAcronym = [];\n        firstNames.forEach(word => {\n          authorAcronym.push(word.charAt(0));\n        });\n        lastNames.forEach(word => {\n          authorAcronym.push(word.charAt(0));\n        });\n        \n        mlaWorksCitedObj.setAuthorAcronym(authorAcronym.join(\"\"));\n        // console.log(authorAcronym);\n        // console.log(firstNames);\n        // console.log(lastNames);\n      }\n      \n      if (authorErrors !== undefined) {\n        let errors = mlaWorksCitedObj.getAuthorErrors();\n        \n        if (errors === undefined) {\n          errors = [];\n        }\n        authorErrors.forEach(error => {\n          errors.push(error);\n        });\n        \n        mlaWorksCitedObj.setAuthorErrors(errors);\n      }\n      \n      \n      \n      \n      sentenceIndex += 1;\n      /*   */\n      \n      worksCitedList.push(mlaWorksCitedObj);\n      \n    }\n    \n    if (worksCitedList[0] === undefined) {\n      return false;\n    }\n    \n    return true;\n  }\n  \n  function insertCommentIntoArray(array, index, commentType, comment, wordLength) {\n    if (array.length < 2) {\n      array.push(index);\n      array.push(commentType);\n      array.push(comment);\n      array.push(wordLength);\n      return array;\n    }\n    \n    for (let i = 0; i < array.length; i+=4) {\n      let indexToCheck = array[i];\n      \n      if (index <= indexToCheck) {\n        array.splice(i, 0, wordLength);\n        array.splice(i, 0, comment);\n        array.splice(i, 0, commentType);\n        array.splice(i, 0, index);\n        return array;\n      }\n    }\n    \n    array.push(index);\n    array.push(commentType);\n    array.push(comment);\n    array.push(wordLength);\n    return array;\n  }\n  \n  /* Creates an array that holds indexes with errors/suggestions/correct statements for printing! */\n  function createSectionsArray(totalNumberOfSections) {\n    let sectionsArray = [];\n    \n    for (let sectionIndex = 0; sectionIndex < totalNumberOfSections; sectionIndex++) {\n      let commentsArray = []; // The index & comment to the error!\n      \n      /* Documents List! */\n      documentErrorList.forEach(documentErrorObj => {\n        if (documentErrorObj.getSection() === sectionIndex) {\n          let errorMessage = documentErrorObj.getError();\n          let errorMessageLower = errorMessage.toLowerCase();\n          let errorType = \"Document Error\";\n          \n          if (errorMessageLower.includes(\"suggestion\")) {\n            errorType = \"Document Suggestion\";\n          }\n          \n          commentsArray = insertCommentIntoArray(commentsArray, documentErrorObj.getIndex(), errorType, errorMessage, 0);\n        }\n      });\n      \n      /* Quotes/Citations List! */\n      dataEntriesList.forEach(quoteObject => {\n        // Quotes \n        if (quoteObject.getQuoteSection() === sectionIndex) {\n          let quoteWordLength = quoteObject.getQuote().split(\" \").length;\n          let errors = quoteObject.getQuoteErrors();\n          if (errors === undefined) { // There should always be quote errors... for some reason :D\n            return;\n          }\n          \n          if (errors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, quoteObject.getQuoteIndex(), \"Correct Quotation\", \"Correct quote format!\", quoteWordLength);\n          } else {\n            \n            for (let i = 0; i < errors.length; i++) {\n              let errorMessage = errors[i];\n              let errorMesssageLower = errorMessage.toLowerCase();\n              let messageType = \"Quotation Error\";\n              \n              if (errorMesssageLower.includes(\"suggestion\")) {\n                messageType = \"Quotation Suggestion\";\n              }\n              commentsArray = insertCommentIntoArray(commentsArray, quoteObject.getQuoteIndex(), messageType, errors[i], quoteWordLength);\n            }\n            \n          }\n        }\n        \n        \n        // Citations\n        if (quoteObject.getCitationSection() !== undefined && quoteObject.getCitationSection() === sectionIndex) {\n          let citationWordLength = quoteObject.getCitation().split(\" \").length;\n          let errors = quoteObject.getCitationErrors();\n          \n          if (errors === undefined || errors.length < 1) { // If there aren't any errors\n            commentsArray = insertCommentIntoArray(commentsArray, quoteObject.getCitationIndex(), \"Correct Citation\", \"Correct Citation.\", citationWordLength);\n          } else {\n            \n            for (let i = 0; i < errors.length; i++) { // insert each error!\n              let errorMessage = errors[i];\n              let errorMesssageLower = errorMessage.toLowerCase();\n              let messageType = \"Citation Error\";\n              \n              if (errorMesssageLower.includes(\"suggestion\")) {\n                messageType = \"Citation Suggestion\";\n              }\n              commentsArray = insertCommentIntoArray(commentsArray, quoteObject.getCitationIndex(), messageType, errors[i], citationWordLength);\n            }\n            \n          }\n        }\n      });\n      \n      /* Citation Errors List! */\n      citationsErrorList.forEach(citationError => {\n        if (citationError.getCitationSection() === sectionIndex) {\n          let errors = citationError.getCitationErrors();\n          \n          if (errors === undefined) {\n            console.log(\"SYSTEM ERROR: citation error must include error message.\");\n            return;\n          }\n          for (let i = 0; i < errors.length; i++) {\n            let errorMessage = errors[i];\n            let errorMesssageLower = errorMessage.toLowerCase();\n            let messageType = \"Citation Error\";\n            \n            if (errorMesssageLower.includes(\"suggestion\")) {\n              messageType = \"Citation Suggestion\";\n            }\n            \n            let wordLength = citationError.getCitation().split(\" \").length;\n            commentsArray = insertCommentIntoArray(commentsArray, citationError.getCitationIndex(), messageType, errorMessage, wordLength);\n          }\n        }\n      });\n      \n      /* Works Cited List! */\n      worksCitedList.forEach(worksCitedObject => {\n        if (worksCitedObject.getSectionIndex() === sectionIndex) {\n          let authorErrors = worksCitedObject.getAuthorErrors();\n          let titleSourceErrors = worksCitedObject.getTitleSourceErrors();\n          let titleContainerErrors = worksCitedObject.getTitleContainerErrors();\n          let contributorsErrors = worksCitedObject.getContributorsErrors();\n          let versionErrors = worksCitedObject.getVersionErrors();\n          let publisherErrors = worksCitedObject.getPublisherErrors();\n          let publicationDateErrors = worksCitedObject.getPublicationDateErrors();\n          let locationDateErrors = worksCitedObject.getLocationErrors();\n          \n          if (authorErrors === undefined || authorErrors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getAuthorIndex(), \"Correct Author\", \"Correct Author format.\", 0);\n          } else {\n            for (let i = 0; i < authorErrors.length; i++) {\n              commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getAuthorIndex(), \"Invalid Author\", authorErrors[i], 0);\n            }\n          }\n          \n          if (titleSourceErrors === undefined || titleSourceErrors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getTitleSourceIndex(), \"Correct Title Source\", \"Correct Title Source format.\", 0);\n          } else {\n            for (let i = 0; i < titleSourceErrors.length; i++) {\n              commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getTitleSourceIndex(), \"Invalid Title Source\", titleSourceErrors[i]);\n            }\n          }\n          \n          if (titleContainerErrors === undefined || titleContainerErrors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getTitleContainerIndex(), \"Correct Title Container\", \"Correct Title Container format.\", 0);\n          } else {\n            for (let i = 0; i < titleContainerErrors.length; i++) {\n              commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getTitleContainerIndex(), \"Invalid Title Container\", titleContainerErrors[i], 0);\n            }\n          }\n          \n          if (contributorsErrors === undefined || contributorsErrors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getContributorsIndex(), \"Correct Contributors\", \"Correct Contributor format.\", 0);\n          } else {\n            for (let i = 0; i < contributorsErrors.length; i++) {\n              commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getContributorsIndex(), \"Invalid Contributors\", contributorsErrors[i], 0);\n            }\n          }\n          \n          \n          if (versionErrors === undefined || versionErrors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getVersionIndex(), \"Correct Version\", \"Correct Version format.\", 0);\n          } else {\n            for (let i = 0; i < versionErrors.length; i++) {\n              commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getVersionIndex(), \"Invalid Version\", versionErrors[i], 0);\n            }\n          }\n          \n          if (publisherErrors === undefined || publisherErrors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getPublisherIndex(), \"Correct Publisher\", \"Correct Publisher format.\", 0);\n          } else {\n            for (let i = 0; i < publisherErrors.length; i++) {\n              commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getPublisherIndex(), \"Invalid Publisher\", publisherErrors[i], 0);\n            }\n          }\n          \n          if (publicationDateErrors === undefined || publicationDateErrors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getPublicationDateIndex(), \"Correct Publication Date\", \"Correct Publicatoin Date format.\", 0);\n          } else {\n            for (let i = 0; i < publicationDateErrors.length; i++) {\n              commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getPublicationDateIndex(), \"Invalid Publication Date\", publicationDateErrors[i], 0);\n            }\n          }\n          \n          if (locationDateErrors === undefined || locationDateErrors.length < 1) {\n            commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getLocationIndex(), \"Correct Location\", \"Correct Location format.\", 0);\n          } else {\n            for (let i = 0; i < locationDateErrors.length; i++) {\n              commentsArray = insertCommentIntoArray(commentsArray, worksCitedObject.getLocationIndex(), \"Invalid Location\", locationDateErrors[i], 0);\n            }\n          }\n          \n        }\n      });\n      \n      sectionsArray.push(commentsArray);\n    }\n    \n    return sectionsArray;\n  }\n  \n  function checkMlaHandler(e) {\n    e.preventDefault();\n    documentErrorList = [];\n    citationsErrorList = [];\n    dataEntriesList = [];\n    worksCitedList = [];\n    const includeCorrects = document.getElementById(\"includeCorrects\").checked;\n    const includeSuggestions = document.getElementById(\"includeSuggestions\").checked;\n    const includeInvalids = document.getElementById(\"includeInvalids\").checked;\n    \n    const responseImportant = document.getElementById(\"responseImportant\");\n    responseImportant.innerHTML = \"\";\n    \n    const inputText = document.getElementById(\"inputText\").value;\n    \n    if (inputText.length > 0) {\n      responseImportant.style.backgroundColor = \"#FF006A\";\n      // responseImportant.style.color = \"#FFF\";\n    }\n    \n    let inputSections = inputText.split(\"\\n\");\n    if (inputSections.length <= 1) {\n      \n      if (inputSections[0].length > 1) {\n        responseImportant.innerHTML = \"Make sure you've copied your whole paper before checking! \" +\n        \"Include the following headers: Full Name, Teacher, Class Name, Today's Date.\";\n        return;\n      }\n      \n      responseImportant.innerHTML = \"Copy and paste your paper to start!\";\n      return;\n    }\n\n    /* Parse the headers! */\n    let hasExtraLinesInHeaders = false;\n    let hasMissingHeaders = false;\n    let startParsingIndex = 0;\n    let inputHeaders = [];\n    for (let i = 0; i < inputSections.length; i++) {\n      \n      if (inputSections[i].length < 1) {\n        hasExtraLinesInHeaders = true;\n        inputSections.splice(i, 1);\n        i--;\n      } else if (inputSections[i].length > 15) {\n        hasMissingHeaders = true;\n        break;\n      } else {\n        inputHeaders.push(inputSections[i]);\n      }\n      \n      if (inputHeaders !== undefined && inputHeaders.length === 4) {\n        break;\n      }\n    }\n\n    /* Input Headers handling!! */\n    if (inputHeaders === undefined) {\n      responseImportant.innerHTML = \"his paper is empty\";\n      return;\n    } else if (inputHeaders.length < 4) {\n      addDocumentError(\"Missing headers! Headers must include: your name, your teacher's name, class name, and current date.\", 0, 0);\n    }\n    if (hasExtraLinesInHeaders) {\n      addDocumentError(\"Consider removing the extra lines between headers of your document.\", 0, 0);\n    }\n    if (hasMissingHeaders) {\n      addDocumentError(\"Header/Title is missing! Headers must include: your name, your teacher's name, class name, and current date.\" +\n      \"If your title is over 15 words long, shorten it and click the Check Citation button again.\", 0, 0);\n    }\n    \n    /* Parse up until the Title! */\n    let inputTitle;\n    let hasExtraLinesBeforeTitle = false;\n    for (let i = inputHeaders.length; i < inputSections.length; i++) {\n      \n      if (inputSections[i].length < 2) {\n        hasExtraLinesBeforeTitle = true;\n        inputSections.splice(i, 1);\n        i--;\n      } else {\n        inputTitle = inputSections[i];\n        startParsingIndex = i+1;\n        break;\n      }\n    }\n    \n    /* Title Handling */\n    if (inputTitle === undefined) {\n      responseImportant.innerHTML = \"Please add more to your paper before checking!\";\n      return;\n    }\n    if (inputSections[startParsingIndex].length < 2 || hasExtraLinesBeforeTitle) {\n      addDocumentError(\"Consider removing the extra lines before and after the Title of your document.\", startParsingIndex -1, 0);\n    }\n    \n    /* Parse the extra lines after the Title! We don't want to use them :) */\n    for (let i = startParsingIndex; i < inputSections.length; i++) {\n      if (inputSections[i].length < 2) {\n        inputSections.splice(i, 1);\n        i--;\n      }\n    }\n    \n    /* Removing any extra lines in the document.*/\n    startOfPaperIndex = undefined;\n    for (let i = 0; i < inputSections.length; i++) {\n      if (inputSections[i].length < 2) {\n        inputSections.splice(i, 1);\n        i--;\n      } else if (startOfPaperIndex === undefined && inputSections[i].split(\" \").length > 20) {\n        startOfPaperIndex = i;\n        break;\n      }\n    }\n    \n    if (startOfPaperIndex === undefined) {\n      responseImportant.innerHTML = \"Please add more to your paper before checking!\";\n      return;\n    }\n    \n    sectionWorksCited = undefined; \n    /* Give the section works cited the last section so the loop can work. */\n    for (let i = startParsingIndex; i < inputSections.length; i++) {\n      let text = inputSections[i].trim().split(\" \");\n      if (text.length === 2) {\n        text = text.join(\" \").toLowerCase();\n        if (text === \"works cited\" || text === \"references\" || text === \"bibliography\") {\n          sectionWorksCited = i;\n        }\n      }\n    }\n    \n    if (sectionWorksCited === undefined) {\n      sectionWorksCited = inputSections.length;\n      responseImportant.innerHTML = \"Please include a works cited page at the end of your document. If your works cited page exists,\" +\n      \" make sure to have a single line named 'Works Cited' before the citations\";\n      return;\n    }\n    \n    /* Check for MLA Works Cited page and parse the works cited citations!*/\n    let hasWorksCitedCitations = false;\n    if (sectionWorksCited < inputSections.length) {\n      hasWorksCitedCitations = findMlaWorksCited(sectionWorksCited+1, inputSections, inputSections.length);\n    }\n    \n    if (!hasWorksCitedCitations) {\n      responseImportant.innerHTML = \"Add your source citations under your 'Works Cited' section at the end of the document.\";\n      return;\n    }\n    \n    // console.log(inputSections);\n    // console.log(startOfPaperIndex, sectionWorksCited);\n    \n    /* Now find the in-text quotes/citations inside the paper sections!*/\n    findMlaQuotes(startOfPaperIndex, inputSections, sectionWorksCited);\n    \n    /* Check that citations alone are valid */\n    \n    \n    // console.log(dataEntriesList);\n    // console.log(citationsErrorList);\n    // console.log(worksCitedList);\n    // console.log(documentErrorList);\n    \n    \n    const sectionArrayObject = createSectionsArray(inputSections.length);\n    // console.log(sectionArrayObject);\n    \n    generateResultPaper(sectionArrayObject, inputSections, includeCorrects, includeSuggestions, includeInvalids);\n    \n    console.log(\"\\nEND\\n\\n\");\n    responseImportant.innerHTML = \"See results below\";\n    responseImportant.style.backgroundColor = \"#3CD604\";\n  }\n  \n  function generateResultPaper(sectionArrayObject, inputSections, includeCorrects, includeSuggestions, includeInvalids) {\n        /* Creating container for parent node */\n    const parent = document.getElementById(\"bottom-parent\");\n    parent.innerHTML = ''; // Clear previous results!\n    const resultsContainer = document.createElement(\"div\");\n    resultsContainer.classList.add(\"container-other\");\n    \n    /* Creating side comment column nodes */\n    // const leftColumnNode = document.createElement(\"div\");\n    // leftColumnNode.classList.add(\"container-other\");\n    // leftColumnNode.classList.add(\"left-column\");\n    const rightColumnNode = document.createElement(\"div\");\n    // rightColumnNode.classList.add(\"container-other\");\n    rightColumnNode.classList.add(\"right-column\");\n    \n    \n    /* Creating results container so text nodes can be appended inside of the container */\n    const resultTitle = document.createElement(\"h1\");\n    const resultTitleText = document.createTextNode(\"Results\");\n    resultTitle.appendChild(resultTitleText);\n    resultsContainer.appendChild(resultTitle);\n    \n    \n    let commentNumber = 1;\n    /* Start creating the paper! parent -> resultsContainer -> text */\n    for (let secIndex = 0; secIndex < inputSections.length; secIndex++) {\n      const wordsInSection = inputSections[secIndex].split(\" \");\n      const sectionNode = document.createElement(\"p\");\n      \n      const sectionArrayComments = sectionArrayObject[secIndex];\n      const commentNumOfItems = sectionArrayComments.length;\n      \n      if (secIndex >= startOfPaperIndex && secIndex < sectionWorksCited) { // To tab paragraphs!\n        const tabNode = document.createTextNode(\"\\u00a0\\u00a0\\u00a0\\u00a0\");\n        sectionNode.appendChild(tabNode);\n      }\n      \n      let commentWordLength = 0;\n      let commentSpanNode;\n      let hasCommentHighlight = false;\n      for (let i = 0; i < wordsInSection.length; i++) {\n        const word = wordsInSection[i];\n        // const spanNode = document.createElement(\"span\");\n        const wordNode = document.createTextNode(word);\n        \n        for (let commentIndex = 0; commentIndex < commentNumOfItems; commentIndex+=4) {\n          \n          if (i === sectionArrayComments[commentIndex]) {\n            // console.log(secIndex + \" \" + sectionArrayComments[commentIndex]);\n            const commentType = sectionArrayComments[commentIndex+1];\n            const commentTypeLower = commentType.toLowerCase();\n            \n            /* Checking whether or not to post based on user input checkboxes. */\n            if (!includeCorrects && commentTypeLower.includes(\"correct\")) {\n              continue;\n            }            \n            if (!includeSuggestions && commentTypeLower.includes(\"suggestion\")) {\n              continue;\n            }            \n            if (!includeInvalids && commentTypeLower.includes(\"invalids\")) {\n              continue;\n            }\n            \n            /** Determines how to highlight the text in the paper*/\n            if (commentWordLength === 0 && !hasCommentHighlight) {\n              hasCommentHighlight = true;\n              commentWordLength = sectionArrayComments[commentIndex + 3];\n              commentSpanNode = document.createElement(\"span\");\n              \n              if (commentTypeLower.includes(\"error\") || commentTypeLower.includes(\"invalid\")) {\n                commentSpanNode.classList.add(\"red-color\");\n              } else if (commentTypeLower.includes(\"correct\")) {\n                commentSpanNode.classList.add(\"green-color\");\n              } else if (commentTypeLower.includes(\"suggestion\")) {\n                commentSpanNode.classList.add(\"yellow-color\");\n              }\n            }\n            \n            const commentNumberNode = document.createTextNode(commentNumber);\n            const numberElement = document.createElement(\"span\");\n            \n            if (commentTypeLower.includes(\"error\") || commentTypeLower.includes(\"invalid\")) {\n              numberElement.classList.add(\"red-number\");\n            } else if (commentTypeLower.includes(\"correct\")) {\n              numberElement.classList.add(\"green-number\");\n            } else if (commentTypeLower.includes(\"suggestion\")) {\n              numberElement.classList.add(\"yellow-number\");\n            }\n            \n            numberElement.appendChild(commentNumberNode);\n            sectionNode.appendChild(numberElement);\n            let spaceNode3 = document.createTextNode(\" \");\n            sectionNode.appendChild(spaceNode3);\n            \n            \n            /** USE #2\n            * Create this or the textnodes/nodes from above will be placed over the nodes below in the Paper! \n            */\n            const containerHeader = document.createElement(\"div\");\n            containerHeader.classList.add(\"side-container-header\");\n            \n            /* Determining the underline container color! */\n            const headerUnderline = document.createElement(\"span\");\n            headerUnderline.classList.add(\"under-line\");\n            \n            if (commentTypeLower.includes(\"error\") || commentTypeLower.includes(\"invalid\")) {\n              headerUnderline.classList.add(\"red-line\");\n            } else if (commentTypeLower.includes(\"correct\")) {\n              headerUnderline.classList.add(\"green-line\");\n            } else if (commentTypeLower.includes(\"suggestion\")) {\n              headerUnderline.classList.add(\"yellow-line\");\n            }\n            \n            /* Determining number to place in the header container!*/\n            const commentNumberNode2 = document.createTextNode(commentNumber);\n            const numberElement2 = document.createElement(\"span\");\n            \n            if (commentTypeLower.includes(\"error\") || commentTypeLower.includes(\"invalid\")) {\n              numberElement2.classList.add(\"red-number\");\n            } else if (commentTypeLower.includes(\"correct\")) {\n              numberElement2.classList.add(\"green-number\");\n            } else if (commentTypeLower.includes(\"suggestion\")) {\n              numberElement2.classList.add(\"yellow-number\");\n            }\n            \n            numberElement2.appendChild(commentNumberNode2);\n            \n            /* Comment Type Node */\n            const commentTypeTextNode = document.createTextNode(commentType);\n            const commentTypeElement = document.createElement(\"h2\");\n            commentTypeElement.append(commentTypeTextNode);\n            \n            /* Comment Message Node */\n            const commentMessageText = sectionArrayComments[commentIndex+2];\n            const commentMessageTextNode = document.createTextNode(commentMessageText);\n            const commentMessageNode = document.createElement(\"p\");\n            commentMessageNode.appendChild(commentMessageTextNode);\n            \n            /* Comment Container Node */\n            const commentContainerNode = document.createElement(\"div\");\n            commentContainerNode.classList.add(\"side-container\");\n            \n            /** Append comment number and type Comment Header div.\n            * Then append Comment Header div to Comment Container div.\n            */\n            containerHeader.appendChild(numberElement2);\n            containerHeader.appendChild(commentTypeElement);\n            commentContainerNode.appendChild(containerHeader);\n            commentContainerNode.appendChild(headerUnderline);\n            commentContainerNode.appendChild(commentMessageNode);\n            \n            /* If comment number is even, append it to right side. Else, left side.*/\n            // if (commentNumber % 2 === 0) {\n            //   rightColumnNode.appendChild(commentContainerNode);\n            // } else {\n            //   leftColumnNode.appendChild(commentContainerNode);\n            // }\n            \n            rightColumnNode.appendChild(commentContainerNode);\n            \n            \n            commentNumber += 1;\n          }\n        }\n        \n        /* If there is a comment associated with the word, make sure the word is added to a highlighted span */\n        if (commentWordLength > 0) {\n          commentWordLength -= 1;\n          \n          commentSpanNode.appendChild(wordNode);\n          const spaceNode2 = document.createTextNode(\" \");\n          commentSpanNode.appendChild(spaceNode2);\n          \n          /* If this is the last word in the highlight. */\n          if (commentWordLength === 0) {\n            hasCommentHighlight = false;\n            sectionNode.appendChild(commentSpanNode);\n          }\n          \n        } else { // Else, just add it to the section node\n          sectionNode.appendChild(wordNode);\n          const spaceNode = document.createTextNode(\" \");\n          sectionNode.appendChild(spaceNode);\n          \n        }\n      } \n      \n      resultsContainer.append(sectionNode);\n    }\n    \n    /* Add the results container at the end! */\n    // parent.appendChild(leftColumnNode);\n    parent.appendChild(resultsContainer);\n    parent.appendChild(rightColumnNode);\n  }\n  \n  function checkApaHandler(e) {\n    e.preventDefault();\n  }\n  \n  return (\n    <div id=\"parent\" className=\"App\">\n      <div id=\"header\" className=\"header\"></div>\n      <div className=\"container\">\n        <h1>Essay Format Checker</h1>\n        <form className=\"inputForm\" autoComplete=\"off\">\n          <div className=\"input-field\">\n            <textarea onChange={inputTextOnChange} onBlur={inputTextChangeOnBlur} onFocus={inputTextChangeOnFocus} id=\"inputText\" type=\"text\" required/>\n            <label id=\"responseImportant\">Copy and paste your text here</label>\n            <span></span>\n          </div>\n          <div className=\"bottom-row\">\n            <div className=\"importantButtons\">\n            { selectedFormat === \"MLA\" ?\n              <button onClick={checkMlaHandler} type=\"submit\" value=\"Check Paper\" className=\"btn btn-check\">Check for MLA format</button>\n              :\n              <button onClick={checkApaHandler} type=\"submit\" value=\"Check Paper\" className=\"btn btn-check\">Check for APA format</button>\n            }\n              <select onChange={selectedFormatHandler} id=\"selectedFormat\" name=\"inputFormat\" className=\"btn btn-select\">\n                <option value=\"MLA\">MLA</option>\n                <option value=\"APA\">APA</option>\n              </select>\n              <div className=\"checkbox-list\">\n                <div className=\"checkbox-item\">\n                  <input type=\"checkbox\" id=\"includeCorrects\" value=\"includeCorrects\"/>\n                  <label for=\"includeCorrects\">Correct Formatting</label>\n                </div>\n                <div className=\"checkbox-item\">\n                  <input type=\"checkbox\" id=\"includeSuggestions\" value=\"includeSuggestions\"/>\n                  <label for=\"includeSuggestions\">Suggestions</label>\n                </div>\n                <div className=\"checkbox-item\">\n                  <input type=\"checkbox\" id=\"includeInvalids\" value=\"includeInvalids\"/>\n                  <label for=\"includeInvalids\">Invalid Formatting</label>\n                </div>\n              </div>\n            </div>\n            <button onClick={clearTextArea} type=\"submit\" value=\"Clear\" className=\"btn btn-clear\">Clear Text</button>\n          </div>\n        </form>\n      </div>\n      \n      <div id=\"bottom-parent\" className=\"bottom-parent\">\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}